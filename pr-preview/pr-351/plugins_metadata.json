{
  "plugins": {
    "aiida-QECpWorkChain": {
      "code_home": "https://github.com/rikigigi/aiida-QECpWorkChain",
      "development_status": "beta",
      "entry_point_prefix": "qecpworkchain",
      "pip_url": "git+https://github.com/rikigigi/aiida-QECpWorkChain",
      "name": "aiida-QECpWorkChain",
      "package_name": "aiida_QECpWorkChain",
      "hosted_on": "github.com",
      "metadata": {
        "author": "Riccardo Bertossa",
        "author_email": "rbertoss@sissa.it",
        "version": "0.2.0a0",
        "description": "Car-Parrinello Work Chain with Quantum Espresso. This workchain does a full CP simulation, from the choice of the electronic mass and the timestep, to the choice of the best parallelization options, and then it does the NPT equilibration and a final NVE simulation at the prescribed P and T. Automates as much as possible.",
        "classifiers": [
          "Programming Language :: Python",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
          "Natural Language :: English",
          "Framework :: AiiDA"
        ]
      },
      "aiida_version": ">=2.0.0,<3.0.0",
      "entry_points": {
        "aiida.workflows": {
          "qecpworkchain.cp": "aiida_QECpWorkChain.workflow:CpWorkChain"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-QECpWorkChain<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/rikigigi/aiida-QECpWorkChain",
      "is_installable": "False"
    },
    "aiida-abacus": {
      "code_home": "https://github.com/MCresearch/aiida-abacus",
      "entry_point_prefix": "abacus",
      "name": "aiida-abacus",
      "package_name": "aiida_abacus",
      "hosted_on": "github.com",
      "metadata": {
        "description": "AiiDA plugin for ABACUS",
        "classifiers": [
          "Programming Language :: Python",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Development Status :: 3 - Alpha",
          "Framework :: AiiDA"
        ],
        "author": "aiida-abacus team"
      },
      "aiida_version": ">=2.5,<3",
      "entry_points": {
        "aiida.data": {
          "abacus": "aiida_abacus.data:DiffParameters"
        },
        "aiida.calculations": {
          "abacus": "aiida_abacus.calculations:DiffCalculation"
        },
        "aiida.parsers": {
          "abacus": "aiida_abacus.parsers:DiffParser"
        },
        "aiida.cmdline.data": {
          "abacus": "aiida_abacus.cli:data_cli"
        }
      },
      "commits_count": 52,
      "development_status": "alpha",
      "errors": [],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 1
        },
        {
          "colorclass": "orange",
          "text": "Other (Data commands)",
          "count": 1
        }
      ],
      "pip_install_cmd": "See source code repository."
    },
    "aiida-abinit": {
      "code_home": "https://github.com/sponce24/aiida-abinit",
      "entry_point_prefix": "abinit",
      "pip_url": "aiida-abinit",
      "plugin_info": "https://raw.github.com/sponce24/aiida-abinit/master/setup.json",
      "name": "aiida-abinit",
      "package_name": "aiida_abinit",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2023-10-04",
        "description": "The AiiDA plugin for ABINIT.",
        "author_email": "Samuel Ponce <samuel.pon@gmail.com>",
        "classifiers": [
          "Development Status :: 4 - Beta",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9"
        ],
        "version": "0.5.0"
      },
      "aiida_version": ">=2.0,<3.0",
      "entry_points": {
        "aiida.calculations": {
          "abinit": "aiida_abinit.calculations:AbinitCalculation"
        },
        "aiida.parsers": {
          "abinit": "aiida_abinit.parsers:AbinitParser"
        },
        "aiida.workflows": {
          "abinit.base": "aiida_abinit.workflows.base:AbinitBaseWorkChain"
        }
      },
      "commits_count": 0,
      "development_status": "beta",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-abinit<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-abinit",
      "is_installable": "False"
    },
    "aiida-aenet": {
      "code_home": "https://gitlab.com/lattice737/aiida-aenet",
      "development_status": "planning",
      "entry_point_prefix": "aenet",
      "pip_url": "https://gitlab.com/lattice737/aiida-aenet",
      "name": "aiida-aenet",
      "package_name": "aiida_aenet",
      "hosted_on": "gitlab.com",
      "metadata": {
        "author": "Nicholas Martinez",
        "author_email": "nicholasmartinez@my.unt.edu",
        "version": "0.1.0",
        "description": "AiiDA plugin to construct machine-learning potentials using aenet",
        "classifiers": [
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Development Status :: 0 - Alpha"
        ]
      },
      "aiida_version": "~=1.2",
      "entry_points": {
        "aiida.data": {
          "aenet.algorithm": "aiida_aenet.data.algorithm:AenetAlgorithm",
          "aenet.potential": "aiida_aenet.data.potentials:AenetPotential"
        },
        "aiida.calculations": {
          "aenet.cur": "aiida_aenet.calculations.cur:CurCalculation",
          "aenet.generate": "aiida_aenet.calculations.generate:AenetGenerateCalculation",
          "aenet.predict": "aiida_aenet.calculations.predict:AenetPredictCalculation",
          "aenet.simulate": "aiida_aenet.calculations.simulate:AenetLammpsMdCalculation",
          "aenet.train": "aiida_aenet.calculations.train:AenetTrainCalculation",
          "aenet.transform": "aiida_aenet.calculations.transform:TransformCalculation"
        },
        "aiida.parsers": {
          "aenet.generate": "aiida_aenet.parsers.generate:AenetGenerateParser",
          "aenet.predict": "aiida_aenet.parsers.predict:AenetPredictParser",
          "aenet.simulate": "aiida_aenet.parsers.simulate:AenetLammpsMdParser",
          "aenet.train": "aiida_aenet.parsers.train:AenetTrainParser"
        },
        "aiida.workflows": {
          "aenet.build_reference": "aiida_aenet.workflows.build_reference:BuildReferenceWorkChain",
          "aenet.compare_simulations": "aiida_aenet.workflows.compare_simulations:CompareSimulationsWorkChain",
          "aenet.make_potential": "aiida_aenet.workflows.make_potential:MakePotentialWorkChain",
          "aenet.make_structures": "aiida_aenet.workflows.make_structures:MakeStructuresWorkChain"
        },
        "aenet.potentials": {
          "lammps.ann": "aiida_aenet.data.potentials.lammps:ANN"
        }
      },
      "commits_count": 0,
      "errors": [],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W003'>W003</a>: Missing classifier 'Framework :: AiiDA'",
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 6
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 4
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 2
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 4
        },
        {
          "colorclass": "orange",
          "text": "Other (Aenet potentials)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install https://gitlab.com/lattice737/aiida-aenet"
    },
    "aiida-aimall": {
      "entry_point_prefix": "aimall",
      "code_home": "https://github.com/kmlefran/aiida-aimall",
      "pip_url": "aiida-aimall",
      "documentation_url": "https://aiida-aimall.readthedocs.io/en/latest/",
      "plugin_info": "https://raw.githubusercontent.com/kmlefran/aiida-aimall/main/pyproject.toml",
      "version_file": "https://raw.githubusercontent.com/kmlefran/aiida-aimall/main/aiida_aimall/__init__.py",
      "name": "aiida-aimall",
      "package_name": "aiida_aimall",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2024-09-12",
        "description": "A plugin to interface AIMAll with AiiDA",
        "author_email": "Kevin Lefrancois-Gagnon <kgagnon@lakeheadu.ca>",
        "classifiers": [
          "Development Status :: 3 - Alpha",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11"
        ],
        "version": "1.0.1"
      },
      "aiida_version": ">=2.0,<3",
      "entry_points": {
        "aiida.calculations": {
          "aimall.aimqb": "aiida_aimall.calculations:AimqbCalculation"
        },
        "aiida.data": {
          "aimall.aimqb": "aiida_aimall.data:AimqbParameters"
        },
        "aiida.parsers": {
          "aimall.base": "aiida_aimall.parsers:AimqbBaseParser",
          "aimall.group": "aiida_aimall.parsers:AimqbGroupParser"
        },
        "aiida.workflows": {
          "aimall.aimreor": "aiida_aimall.workchains.param_parts:AIMAllReorWorkChain",
          "aimall.gausstoaim": "aiida_aimall.workchains.qc_programs:GaussianToAIMWorkChain",
          "aimall.qmtoaim": "aiida_aimall.workchains.qc_programs:QMToAIMWorkChain",
          "aimall.smitogauss": "aiida_aimall.workchains.param_parts:SmilesToGaussianWorkChain",
          "aimall.subparam": "aiida_aimall.workchains.subparam:SubstituentParameterWorkChain",
          "aimall.wfxtoaim": "aiida_aimall.workchains.qc_programs:GenerateWFXToAIMWorkChain"
        }
      },
      "commits_count": 79,
      "development_status": "alpha",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-aimall<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 2
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 6
        }
      ],
      "pip_install_cmd": "pip install aiida-aimall",
      "is_installable": "False"
    },
    "aiida-alloy": {
      "code_home": "https://github.com/DanielMarchand/aiida-alloy",
      "development_status": "beta",
      "entry_point_prefix": "alloy",
      "pip_url": "git+https://github.com/DanielMarchand/aiida-alloy",
      "name": "aiida-alloy",
      "package_name": "aiida_alloy",
      "hosted_on": "github.com",
      "metadata": {
        "author": "The AiiDA developers group",
        "author_email": "",
        "version": "0.1.0a0",
        "description": "Aiida Workflows for Elastic Constants using Quantum Espresso",
        "classifiers": [
          "Programming Language :: Python"
        ]
      },
      "aiida_version": ">=1.0.0a0",
      "entry_points": {
        "aiida.workflows": {
          "elastic": "aiida_alloy.workflows.ElasticWorkChain:ElasticWorkChain"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-alloy<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W003'>W003</a>: Missing classifier 'Framework :: AiiDA'",
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead.",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'elastic' does not start with prefix 'alloy.'"
      ],
      "summaryinfo": [
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/DanielMarchand/aiida-alloy",
      "is_installable": "False"
    },
    "aiida-amber": {
      "code_home": "https://github.com/PSDI-UK/aiida-amber",
      "entry_point_prefix": "amber",
      "pip_url": "git+https://github.com/PSDI-UK/aiida-amber",
      "name": "aiida-amber",
      "package_name": "aiida_amber",
      "hosted_on": "github.com",
      "metadata": {
        "description": "AiiDA plugin that wraps amber molecular dynamics executables",
        "classifiers": [
          "Programming Language :: Python",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Development Status :: 3 - Alpha",
          "Framework :: AiiDA"
        ],
        "author": "Jas Kalayan",
        "author_email": "jas.kalayan@stfc.ac.uk"
      },
      "aiida_version": ">=2.4.0,<3",
      "entry_points": {
        "aiida.data": {
          "amber.sander": "aiida_amber.data.sander:SanderParameters",
          "amber.tleap": "aiida_amber.data.tleap:TleapParameters",
          "amber.tleap_input": "aiida_amber.data.tleap_input:TleapInputData",
          "amber.antechamber": "aiida_amber.data.antechamber:AntechamberParameters",
          "amber.pdb4amber": "aiida_amber.data.pdb4amber:Pdb4amberParameters",
          "amber.parmed": "aiida_amber.data.parmed:ParmedParameters",
          "amber.parmed_input": "aiida_amber.data.parmed_input:ParmedInputData"
        },
        "aiida.calculations": {
          "amber.sander": "aiida_amber.calculations.sander:SanderCalculation",
          "amber.tleap": "aiida_amber.calculations.tleap:TleapCalculation",
          "amber.antechamber": "aiida_amber.calculations.antechamber:AntechamberCalculation",
          "amber.pdb4amber": "aiida_amber.calculations.pdb4amber:Pdb4amberCalculation",
          "amber.parmed": "aiida_amber.calculations.parmed:ParmedCalculation"
        },
        "aiida.parsers": {
          "amber.sander": "aiida_amber.parsers.sander:SanderParser",
          "amber.tleap": "aiida_amber.parsers.tleap:TleapParser",
          "amber.antechamber": "aiida_amber.parsers.antechamber:AntechamberParser",
          "amber.pdb4amber": "aiida_amber.parsers.pdb4amber:Pdb4amberParser",
          "amber.parmed": "aiida_amber.parsers.parmed:ParmedParser"
        }
      },
      "commits_count": 126,
      "development_status": "alpha",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-amber<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 5
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 5
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 7
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/PSDI-UK/aiida-amber",
      "is_installable": "False"
    },
    "aiida-ase": {
      "code_home": "https://github.com/aiidateam/aiida-ase",
      "documentation_url": "https://aiida-ase.readthedocs.io/",
      "entry_point_prefix": "ase",
      "pip_url": "aiida-ase",
      "plugin_info": "https://raw.github.com/aiidateam/aiida-ase/master/setup.json",
      "name": "aiida-ase",
      "package_name": "aiida_ase",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2023-10-04",
        "description": "The official AiiDA plugin for ASE.",
        "author_email": "The AiiDA team <developers@aiida.net>",
        "classifiers": [
          "Development Status :: 4 - Beta",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Topic :: Scientific/Engineering"
        ],
        "version": "3.0.0"
      },
      "aiida_version": ">=2.0,<3.0",
      "entry_points": {
        "aiida.calculations": {
          "ase.ase": "aiida_ase.calculations.ase:AseCalculation"
        },
        "aiida.parsers": {
          "ase.ase": "aiida_ase.parsers.ase:AseParser",
          "ase.gpaw": "aiida_ase.parsers.gpaw:GpawParser"
        },
        "aiida.workflows": {
          "ase.gpaw.base": "aiida_ase.workflows.base:GpawBaseWorkChain"
        }
      },
      "commits_count": 1,
      "development_status": "beta",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-ase<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 2
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-ase",
      "is_installable": "False"
    },
    "aiida-autocas": {
      "entry_point_prefix": "autocas",
      "code_home": "https://github.com/microsoft/aiida-autocas",
      "version_file": "https://raw.githubusercontent.com/microsoft/aiida-autocas/main/aiida_autocas/__init__.py",
      "pip_url": "git+https://github.com/microsoft/aiida-autocas",
      "name": "aiida-autocas",
      "package_name": "aiida_autocas",
      "hosted_on": "github.com",
      "metadata": {
        "version": "0.1.0",
        "description": "AiiDA AutoCAS Plugin",
        "classifiers": []
      },
      "aiida_version": ">=2.0,<3",
      "entry_points": {
        "aiida.calculations": {
          "autocas": "aiida_autocas.calculations:AutoCASCalculation"
        },
        "aiida.parsers": {
          "autocas": "aiida_autocas.parsers:AutoCASParser"
        }
      },
      "commits_count": 0,
      "development_status": "planning",
      "errors": [],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W003'>W003</a>: Missing classifier 'Framework :: AiiDA'"
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/microsoft/aiida-autocas"
    },
    "aiida-bader": {
      "entry_point_prefix": "bader",
      "pip_url": "aiida-bader",
      "code_home": "https://github.com/superstar54/aiida-bader",
      "documentation_url": "https://aiida-bader.readthedocs.io/en/latest/",
      "name": "aiida-bader",
      "package_name": "aiida_bader",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2025-03-06",
        "description": "Collections of node-based workflow created using aiida-workgraph.",
        "author_email": "Xing Wang <xingwang1991@gmail.com>",
        "classifiers": [
          "Development Status :: 1 - Planning",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.9",
          "Topic :: Scientific/Engineering"
        ],
        "version": "0.1.2"
      },
      "aiida_version": "*",
      "entry_points": {
        "aiida.calculations": {
          "bader.bader": "aiida_bader.calculations:BaderCalculation"
        },
        "aiida.parsers": {
          "bader.bader": "aiida_bader.parsers:BaderParser"
        },
        "aiida.workflows": {
          "bader.qe": "aiida_bader.workchains:QeBaderWorkChain"
        },
        "aiidalab_qe.properties": {
          "bader": "aiida_bader.qeapp:bader"
        }
      },
      "commits_count": 29,
      "development_status": "planning",
      "errors": [],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        },
        {
          "colorclass": "orange",
          "text": "Other (Aiidalab qe properties)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-bader"
    },
    "aiida-bands-inspect": {
      "code_home": "https://github.com/greschd/aiida-bands-inspect",
      "documentation_url": "https://aiida-bands-inspect.readthedocs.io",
      "entry_point_prefix": "bands_inspect",
      "pip_url": "aiida-bands-inspect",
      "name": "aiida-bands-inspect",
      "package_name": "aiida_bands_inspect",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2020-03-26",
        "description": "AiiDA Plugin for running bands_inspect",
        "author": "Dominik Gresch",
        "author_email": "greschd@gmx.ch",
        "license": "Apache 2.0",
        "home_page": "https://aiida-bands-inspect.readthedocs.io",
        "classifiers": [
          "Development Status :: 4 - Beta",
          "Environment :: Plugins",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Topic :: Scientific/Engineering :: Physics"
        ],
        "version": "0.4.0"
      },
      "aiida_version": null,
      "entry_points": {
        "aiida.calculations": {
          "bands_inspect.align": "aiida_bands_inspect.calculations.align:AlignCalculation",
          "bands_inspect.difference": "aiida_bands_inspect.calculations.difference:DifferenceCalculation",
          "bands_inspect.plot": "aiida_bands_inspect.calculations.plot:PlotCalculation"
        },
        "aiida.parsers": {
          "bands_inspect.bands": "aiida_bands_inspect.parsers.bands:BandsParser",
          "bands_inspect.difference": "aiida_bands_inspect.parsers.difference:DifferenceParser",
          "bands_inspect.align": "aiida_bands_inspect.parsers.align:AlignParser",
          "bands_inspect.plot": "aiida_bands_inspect.parsers.plot:PlotParser"
        }
      },
      "commits_count": 0,
      "development_status": "beta",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-bands-inspect<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W019'>W019</a>: No <code>bdist_wheel</code> available for PyPI release.",
        "<a href='https://github.com/aiidateam/aiida-registry#W002'>W002</a>: AiiDA version not found"
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 3
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 4
        }
      ],
      "pip_install_cmd": "pip install aiida-bands-inspect",
      "is_installable": "False"
    },
    "aiida-bigdft": {
      "code_home": "https://github.com/BigDFT-group/aiida-bigdft-plugin",
      "development_status": "beta",
      "entry_point_prefix": "bigdft",
      "pip_url": "aiida-bigdft",
      "plugin_info": "https://raw.github.com/BigDFT-group/aiida-bigdft-plugin/master/setup.json",
      "name": "aiida-bigdft",
      "package_name": "aiida_bigdft",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2024-01-10",
        "description": "Translation layer for AiiDA-PyBigDFT",
        "author_email": "Louis Beal <louis.j.beal@gmail.com>",
        "classifiers": [
          "Development Status :: 3 - Alpha",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Programming Language :: Python"
        ],
        "version": "0.3.0"
      },
      "aiida_version": ">=1.6.3,<3",
      "entry_points": {
        "aiida.calculations": {
          "bigdft": "aiida_bigdft.calculations:BigDFTCalculation"
        },
        "aiida.cmdline.data": {
          "bigdft": "aiida_bigdft.cli:data_cli"
        },
        "aiida.data": {
          "bigdft": "aiida_bigdft.data.BigDFTParameters:BigDFTParameters",
          "bigdftfile": "aiida_bigdft.data.BigDFTFile:BigDFTFile",
          "bigdftlogfile": "aiida_bigdft.data.BigDFTFile:BigDFTLogfile"
        },
        "aiida.parsers": {
          "bigdft": "aiida_bigdft.parsers:BigDFTParser"
        },
        "aiida.workflows": {
          "bigdft": "aiida_bigdft.workflows.base:BigDFTBaseWorkChain",
          "bigdft.relax": "aiida_bigdft.workflows.relax:BigDFTRelaxWorkChain"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-bigdft<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W005'>W005</a>: Development status in classifiers (alpha) does not match development_status in metadata (beta)",
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 3
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 2
        },
        {
          "colorclass": "orange",
          "text": "Other (Data commands)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-bigdft",
      "is_installable": "False"
    },
    "aiida-castep": {
      "code_home": "https://gitlab.com/bz1/aiida-castep",
      "development_status": "stable",
      "documentation_url": "https://aiida-castep.readthedocs.io/",
      "entry_point_prefix": "castep",
      "pip_url": "aiida-castep",
      "plugin_info": "https://gitlab.com/bz1/aiida-castep/raw/master/setup.json",
      "name": "aiida-castep",
      "package_name": "aiida_castep",
      "hosted_on": "gitlab.com",
      "metadata": {
        "release_date": "2022-05-26",
        "description": "AiiDA plugin for CASTEP",
        "author": "Bonan Zhu",
        "author_email": "zhubonan@outlook.com",
        "license": "MIT License",
        "home_page": "https://github.com/zhubonan/aiida-castep",
        "classifiers": [
          "Framework :: AiiDA",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9"
        ],
        "version": "2.0.1"
      },
      "aiida_version": ">=2.0,<3.0",
      "entry_points": {
        "aiida.calculations": {
          "castep.castep": "aiida_castep.calculations.castep:CastepCalculation",
          "castep.ts": "aiida_castep.calculations.castep:CastepTSCalculation"
        },
        "aiida.cmdline.data": {
          "castep-helper": "aiida_castep.cmdline.helper_cmd:helper_cmd",
          "castep-pseudos": "aiida_castep.cmdline.otfg_cmd:pseudos_cmd"
        },
        "aiida.data": {
          "castep.otfgdata": "aiida_castep.data.otfg:OTFGData",
          "castep.uspdata": "aiida_castep.data.usp:UspData"
        },
        "aiida.groups": {
          "castep.otfg": "aiida_castep.data.otfg:OTFGGroup"
        },
        "aiida.parsers": {
          "castep.castep": "aiida_castep.parsers.castep:CastepParser"
        },
        "aiida.tests": {
          "castep.calculation": "aiida_castep.tests.dbtests.dbtestcalculation"
        },
        "aiida.tools.calculations": {
          "castep.castep": "aiida_castep.calculations.tools:CastepCalcTools"
        },
        "aiida.workflows": {
          "castep.altrelax": "aiida_castep.workflows.relax:CastepAlterRelaxWorkChain",
          "castep.bands": "aiida_castep.workflows.bands:CastepBandsWorkChain",
          "castep.base": "aiida_castep.workflows.base:CastepBaseWorkChain",
          "castep.relax": "aiida_castep.workflows.relax:CastepRelaxWorkChain"
        },
        "console_scripts": {
          "castep.mock": "aiida_castep.cmdline.mock_castep:mock_castep"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-castep<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 2
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 2
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 4
        },
        {
          "colorclass": "purple",
          "text": "Console scripts",
          "count": 1
        },
        {
          "colorclass": "orange",
          "text": "Other (Data commands, Groups, Tests, ...)",
          "count": 5
        }
      ],
      "pip_install_cmd": "pip install aiida-castep",
      "is_installable": "False"
    },
    "aiida-catmap": {
      "code_home": "https://github.com/sudarshanv01/aiida-catmap",
      "entry_point_prefix": "catmap",
      "name": "aiida-catmap",
      "package_name": "aiida_catmap",
      "hosted_on": "github.com",
      "metadata": {
        "author": "Sudarshan Vijay",
        "author_email": "vijays@fysik.dtu.dk",
        "version": "0.2.0a0",
        "description": "AiiDA package that interfaces with Kinetic modelling code CatMAP",
        "classifiers": [
          "Programming Language :: Python",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Framework :: AiiDA"
        ]
      },
      "aiida_version": ">=1.1.0,<2.0.0",
      "entry_points": {
        "aiida.calculations": {
          "catmap": "aiida_catmap.calculations.catmap:CatMAPCalculation"
        },
        "aiida.parsers": {
          "catmap": "aiida_catmap.parsers.catmap:CatMAPParser"
        }
      },
      "commits_count": 0,
      "development_status": "planning",
      "errors": [],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        }
      ],
      "pip_install_cmd": "See source code repository."
    },
    "aiida-catmat": {
      "code_home": "https://github.com/pzarabadip/aiida-catmat",
      "entry_point_prefix": "catmat",
      "development_status": "beta",
      "documentation_url": "https://aiida-catmat.readthedocs.io/",
      "pip_url": "aiida-catmat",
      "name": "aiida-catmat",
      "package_name": "aiida_catmat",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2022-07-21",
        "description": "Collection of AiiDA WorkChains Developed in Morgan Group",
        "author": "Pezhman Zarabadi-Poor",
        "author_email": "pzarabadip@gmail.com",
        "license": "MIT License",
        "home_page": "https://github.com/pzarabadip/aiida-catmat",
        "classifiers": [
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9"
        ],
        "version": "1.0.0b0"
      },
      "aiida_version": null,
      "entry_points": {
        "aiida.parsers": {
          "vasp_base_parser": "aiida_catmat.parsers:VaspBaseParser"
        },
        "aiida.workflows": {
          "vasp.base": "aiida_catmat.workchains:VaspBaseWorkChain",
          "catmat.vasp_multistage": "aiida_catmat.workchains:VaspMultiStageWorkChain",
          "catmat.vasp_converge": "aiida_catmat.workchains:VaspConvergeWorkChain",
          "catmat.vasp_catmat": "aiida_catmat.workchains:VaspCatMatWorkChain",
          "catmat.vasp_multistage_ddec": "aiida_catmat.workchains:VaspMultiStageDdecWorkChain"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-catmat<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W019'>W019</a>: No <code>bdist_wheel</code> available for PyPI release.",
        "<a href='https://github.com/aiidateam/aiida-registry#W002'>W002</a>: AiiDA version not found",
        "<a href='https://github.com/aiidateam/aiida-registry#W003'>W003</a>: Missing classifier 'Framework :: AiiDA'",
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead.",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'vasp_base_parser' does not start with prefix 'catmat.'",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'vasp.base' does not start with prefix 'catmat.'"
      ],
      "summaryinfo": [
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 5
        }
      ],
      "pip_install_cmd": "pip install --pre aiida-catmat",
      "is_installable": "False"
    },
    "aiida-ce": {
      "code_home": "https://github.com/unkcpz/aiida-ce",
      "development_status": "beta",
      "entry_point_prefix": "ce",
      "pip_url": "git+https://github.com/unkcpz/aiida-ce",
      "name": "aiida-ce",
      "package_name": "aiida_ce",
      "hosted_on": "github.com",
      "metadata": {
        "author": "unkcpz",
        "author_email": "morty.yu@yahoo.com",
        "version": "0.1.0a0",
        "description": "AiiDA plugin for running cluster expansion using icet.",
        "classifiers": [
          "Programming Language :: Python",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Framework :: AiiDA"
        ]
      },
      "aiida_version": ">=1.0.0,<2.0.0",
      "entry_points": {
        "aiida.data": {
          "ce": "aiida_ce.data:DiffParameters",
          "ce.structures": "aiida_ce.data.structure_set:StructureSet",
          "ce.cluster": "aiida_ce.data.cluster:ClusterSpaceData"
        },
        "aiida.calculations": {
          "ce.genenum": "aiida_ce.calculations.genenum:EnumCalculation",
          "ce.gensqs": "aiida_ce.calculations.gensqs:SqsCalculation",
          "ce.train": "aiida_ce.calculations.train:TrainCalculation"
        },
        "aiida.parsers": {
          "ce.genenum": "aiida_ce.parsers.genenum:EnumParser",
          "ce.gensqs": "aiida_ce.parsers.gensqs:SqsParser",
          "ce.train": "aiida_ce.parsers.train:TrainParser"
        },
        "aiida.cmdline.data": {
          "ce": "aiida_ce.cli:data_cli"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-ce<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 3
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 3
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 3
        },
        {
          "colorclass": "orange",
          "text": "Other (Data commands)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/unkcpz/aiida-ce",
      "is_installable": "False"
    },
    "aiida-champ": {
      "code_home": "https://github.com/TREX-CoE/aiida-champ",
      "development_status": "beta",
      "documentation_url": "http://aiida-champ.readthedocs.io/",
      "entry_point_prefix": "champ",
      "pip_url": "aiida-champ",
      "name": "aiida-champ",
      "package_name": "aiida_champ",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2021-12-27",
        "description": "AiiDA plugin that wraps the vmc executable of CHAMP code for computing the total energy and much more stuff.",
        "author": "Ravindra Shinde",
        "author_email": "r.l.shinde@utwente.nl",
        "license": "MIT",
        "home_page": "https://github.com/neelravi/aiida-champ",
        "classifiers": [
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Programming Language :: Python"
        ],
        "version": "1.2.6"
      },
      "aiida_version": null,
      "entry_points": {
        "aiida.data": {
          "CHAMP": "aiida_champ.data:CHAMPParameters"
        },
        "aiida.calculations": {
          "CHAMP": "aiida_champ.calculations:CHAMPCalculation"
        },
        "aiida.parsers": {
          "CHAMP": "aiida_champ.parsers:CHAMPParser"
        },
        "aiida.cmdline.data": {
          "CHAMP": "aiida_champ.cli:data_cli"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-champ<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W019'>W019</a>: No <code>bdist_wheel</code> available for PyPI release.",
        "<a href='https://github.com/aiidateam/aiida-registry#W002'>W002</a>: AiiDA version not found",
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead.",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'CHAMP' does not start with prefix 'champ.'",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'CHAMP' does not start with prefix 'champ.'",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'CHAMP' does not start with prefix 'champ.'",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'CHAMP' does not start with prefix 'champ.'"
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 1
        },
        {
          "colorclass": "orange",
          "text": "Other (Data commands)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-champ",
      "is_installable": "False"
    },
    "aiida-codtools": {
      "code_home": "https://github.com/aiidateam/aiida-codtools",
      "documentation_url": "https://aiida-codtools.readthedocs.io/",
      "entry_point_prefix": "codtools",
      "pip_url": "aiida-codtools",
      "plugin_info": "https://raw.githubusercontent.com/aiidateam/aiida-codtools/master/setup.json",
      "name": "aiida-codtools",
      "package_name": "aiida_codtools",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2023-02-02",
        "description": "The Official AiiDA plugin for the cod-tools package.",
        "author_email": "The AiiDA team <developers@aiida.net>",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9"
        ],
        "version": "3.1.0"
      },
      "aiida_version": ">=2.1,<3.0",
      "entry_points": {
        "aiida.calculations": {
          "codtools.cif_base": "aiida_codtools.calculations.cif_base:CifBaseCalculation",
          "codtools.cif_cell_contents": "aiida_codtools.calculations.cif_cell_contents:CifCellContentsCalculation",
          "codtools.cif_cod_check": "aiida_codtools.calculations.cif_cod_check:CifCodCheckCalculation",
          "codtools.cif_cod_deposit": "aiida_codtools.calculations.cif_cod_deposit:CifCodDepositCalculation",
          "codtools.cif_cod_numbers": "aiida_codtools.calculations.cif_cod_numbers:CifCodNumbersCalculation",
          "codtools.cif_filter": "aiida_codtools.calculations.cif_filter:CifFilterCalculation",
          "codtools.cif_select": "aiida_codtools.calculations.cif_select:CifSelectCalculation",
          "codtools.cif_split_primitive": "aiida_codtools.calculations.cif_split_primitive:CifSplitPrimitiveCalculation",
          "codtools.primitive_structure_from_cif": "aiida_codtools.calculations.functions.primitive_structure_from_cif:primitive_structure_from_cif"
        },
        "aiida.parsers": {
          "codtools.cif_base": "aiida_codtools.parsers.cif_base:CifBaseParser",
          "codtools.cif_cell_contents": "aiida_codtools.parsers.cif_cell_contents:CifCellContentsParser",
          "codtools.cif_cod_check": "aiida_codtools.parsers.cif_cod_check:CifCodCheckParser",
          "codtools.cif_cod_deposit": "aiida_codtools.parsers.cif_cod_deposit:CifCodDepositParser",
          "codtools.cif_cod_numbers": "aiida_codtools.parsers.cif_cod_numbers:CifCodNumbersParser",
          "codtools.cif_split_primitive": "aiida_codtools.parsers.cif_split_primitive:CifSplitPrimitiveParser"
        },
        "aiida.workflows": {
          "codtools.cif_clean": "aiida_codtools.workflows.cif_clean:CifCleanWorkChain"
        },
        "console_scripts": {
          "aiida-codtools": "aiida_codtools.cli:cmd_root"
        }
      },
      "commits_count": 0,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-codtools<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 9
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 6
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        },
        {
          "colorclass": "purple",
          "text": "Console scripts",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-codtools",
      "is_installable": "False"
    },
    "aiida-core": {
      "code_home": "https://github.com/aiidateam/aiida-core",
      "development_status": "stable",
      "documentation_url": "https://aiida-core.readthedocs.io/",
      "entry_point_prefix": "",
      "package_name": "aiida",
      "pip_url": "aiida-core",
      "plugin_info": "https://raw.githubusercontent.com/aiidateam/aiida-core/master/setup.json",
      "name": "aiida-core",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2024-11-06",
        "description": "AiiDA is a workflow manager for computational science with a strong focus on provenance, performance and extensibility.",
        "author_email": "The AiiDA team <developers@aiida.net>",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.9",
          "Topic :: Scientific/Engineering"
        ],
        "version": "2.6.3"
      },
      "aiida_version": "==2.6.3",
      "entry_points": {
        "aiida.brokers": {
          "core.rabbitmq": "aiida.brokers.rabbitmq.broker:RabbitmqBroker"
        },
        "aiida.calculations": {
          "core.arithmetic.add": "aiida.calculations.arithmetic.add:ArithmeticAddCalculation",
          "core.templatereplacer": "aiida.calculations.templatereplacer:TemplatereplacerCalculation",
          "core.transfer": "aiida.calculations.transfer:TransferCalculation"
        },
        "aiida.calculations.importers": {
          "core.arithmetic.add": "aiida.calculations.importers.arithmetic.add:ArithmeticAddCalculationImporter"
        },
        "aiida.calculations.monitors": {
          "core.always_kill": "aiida.calculations.monitors.base:always_kill"
        },
        "aiida.cmdline.computer.configure": {
          "core.local": "aiida.transports.plugins.local:CONFIGURE_LOCAL_CMD",
          "core.ssh": "aiida.transports.plugins.ssh:CONFIGURE_SSH_CMD"
        },
        "aiida.cmdline.data": {
          "core.array": "aiida.cmdline.commands.cmd_data.cmd_array:array",
          "core.bands": "aiida.cmdline.commands.cmd_data.cmd_bands:bands",
          "core.cif": "aiida.cmdline.commands.cmd_data.cmd_cif:cif",
          "core.dict": "aiida.cmdline.commands.cmd_data.cmd_dict:dictionary",
          "core.remote": "aiida.cmdline.commands.cmd_data.cmd_remote:remote",
          "core.singlefile": "aiida.cmdline.commands.cmd_data.cmd_singlefile:singlefile",
          "core.structure": "aiida.cmdline.commands.cmd_data.cmd_structure:structure",
          "core.trajectory": "aiida.cmdline.commands.cmd_data.cmd_trajectory:trajectory",
          "core.upf": "aiida.cmdline.commands.cmd_data.cmd_upf:upf"
        },
        "aiida.cmdline.data.structure.import": {},
        "aiida.data": {
          "core.array": "aiida.orm.nodes.data.array.array:ArrayData",
          "core.array.bands": "aiida.orm.nodes.data.array.bands:BandsData",
          "core.array.kpoints": "aiida.orm.nodes.data.array.kpoints:KpointsData",
          "core.array.projection": "aiida.orm.nodes.data.array.projection:ProjectionData",
          "core.array.trajectory": "aiida.orm.nodes.data.array.trajectory:TrajectoryData",
          "core.array.xy": "aiida.orm.nodes.data.array.xy:XyData",
          "core.base": "aiida.orm.nodes.data:BaseType",
          "core.bool": "aiida.orm.nodes.data.bool:Bool",
          "core.cif": "aiida.orm.nodes.data.cif:CifData",
          "core.code": "aiida.orm.nodes.data.code.legacy:Code",
          "core.code.containerized": "aiida.orm.nodes.data.code.containerized:ContainerizedCode",
          "core.code.installed": "aiida.orm.nodes.data.code.installed:InstalledCode",
          "core.code.portable": "aiida.orm.nodes.data.code.portable:PortableCode",
          "core.dict": "aiida.orm.nodes.data.dict:Dict",
          "core.enum": "aiida.orm.nodes.data.enum:EnumData",
          "core.float": "aiida.orm.nodes.data.float:Float",
          "core.folder": "aiida.orm.nodes.data.folder:FolderData",
          "core.int": "aiida.orm.nodes.data.int:Int",
          "core.jsonable": "aiida.orm.nodes.data.jsonable:JsonableData",
          "core.list": "aiida.orm.nodes.data.list:List",
          "core.numeric": "aiida.orm.nodes.data.numeric:NumericType",
          "core.orbital": "aiida.orm.nodes.data.orbital:OrbitalData",
          "core.remote": "aiida.orm.nodes.data.remote.base:RemoteData",
          "core.remote.stash": "aiida.orm.nodes.data.remote.stash.base:RemoteStashData",
          "core.remote.stash.folder": "aiida.orm.nodes.data.remote.stash.folder:RemoteStashFolderData",
          "core.singlefile": "aiida.orm.nodes.data.singlefile:SinglefileData",
          "core.str": "aiida.orm.nodes.data.str:Str",
          "core.structure": "aiida.orm.nodes.data.structure:StructureData",
          "core.upf": "aiida.orm.nodes.data.upf:UpfData"
        },
        "aiida.groups": {
          "core": "aiida.orm.groups:Group",
          "core.auto": "aiida.orm.groups:AutoGroup",
          "core.import": "aiida.orm.groups:ImportGroup",
          "core.upf": "aiida.orm.groups:UpfFamily"
        },
        "aiida.node": {
          "data": "aiida.orm.nodes.data.data:Data",
          "process": "aiida.orm.nodes.process.process:ProcessNode",
          "process.calculation": "aiida.orm.nodes.process.calculation.calculation:CalculationNode",
          "process.calculation.calcfunction": "aiida.orm.nodes.process.calculation.calcfunction:CalcFunctionNode",
          "process.calculation.calcjob": "aiida.orm.nodes.process.calculation.calcjob:CalcJobNode",
          "process.workflow": "aiida.orm.nodes.process.workflow.workflow:WorkflowNode",
          "process.workflow.workchain": "aiida.orm.nodes.process.workflow.workchain:WorkChainNode",
          "process.workflow.workfunction": "aiida.orm.nodes.process.workflow.workfunction:WorkFunctionNode"
        },
        "aiida.parsers": {
          "core.arithmetic.add": "aiida.parsers.plugins.arithmetic.add:ArithmeticAddParser",
          "core.templatereplacer": "aiida.parsers.plugins.templatereplacer.parser:TemplatereplacerParser"
        },
        "aiida.schedulers": {
          "core.direct": "aiida.schedulers.plugins.direct:DirectScheduler",
          "core.lsf": "aiida.schedulers.plugins.lsf:LsfScheduler",
          "core.pbspro": "aiida.schedulers.plugins.pbspro:PbsproScheduler",
          "core.sge": "aiida.schedulers.plugins.sge:SgeScheduler",
          "core.slurm": "aiida.schedulers.plugins.slurm:SlurmScheduler",
          "core.torque": "aiida.schedulers.plugins.torque:TorqueScheduler"
        },
        "aiida.storage": {
          "core.psql_dos": "aiida.storage.psql_dos.backend:PsqlDosBackend",
          "core.sqlite_dos": "aiida.storage.sqlite_dos.backend:SqliteDosStorage",
          "core.sqlite_temp": "aiida.storage.sqlite_temp.backend:SqliteTempBackend",
          "core.sqlite_zip": "aiida.storage.sqlite_zip.backend:SqliteZipBackend"
        },
        "aiida.tools.calculations": {},
        "aiida.tools.data.orbitals": {
          "core.orbital": "aiida.tools.data.orbital.orbital:Orbital",
          "core.realhydrogen": "aiida.tools.data.orbital.realhydrogen:RealhydrogenOrbital"
        },
        "aiida.tools.dbexporters": {},
        "aiida.tools.dbimporters": {
          "core.cod": "aiida.tools.dbimporters.plugins.cod:CodDbImporter",
          "core.icsd": "aiida.tools.dbimporters.plugins.icsd:IcsdDbImporter",
          "core.materialsproject": "aiida.tools.dbimporters.plugins.materialsproject:MaterialsProjectImporter",
          "core.mpds": "aiida.tools.dbimporters.plugins.mpds:MpdsDbImporter",
          "core.mpod": "aiida.tools.dbimporters.plugins.mpod:MpodDbImporter",
          "core.nninc": "aiida.tools.dbimporters.plugins.nninc:NnincDbImporter",
          "core.oqmd": "aiida.tools.dbimporters.plugins.oqmd:OqmdDbImporter",
          "core.pcod": "aiida.tools.dbimporters.plugins.pcod:PcodDbImporter",
          "core.tcod": "aiida.tools.dbimporters.plugins.tcod:TcodDbImporter"
        },
        "aiida.transports": {
          "core.local": "aiida.transports.plugins.local:LocalTransport",
          "core.ssh": "aiida.transports.plugins.ssh:SshTransport"
        },
        "aiida.workflows": {
          "core.arithmetic.add_multiply": "aiida.workflows.arithmetic.add_multiply:add_multiply",
          "core.arithmetic.multiply_add": "aiida.workflows.arithmetic.multiply_add:MultiplyAddWorkChain"
        },
        "console_scripts": {
          "runaiida": "aiida.cmdline.commands.cmd_run:run",
          "verdi": "aiida.cmdline.commands.cmd_verdi:verdi"
        }
      },
      "commits_count": 257,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-core<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 3
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 2
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 29
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 2
        },
        {
          "colorclass": "purple",
          "text": "Console scripts",
          "count": 2
        },
        {
          "colorclass": "orange",
          "text": "Other (Brokers, Calculations importers, Calculations monitors, ...)",
          "count": 49
        }
      ],
      "pip_install_cmd": "pip install aiida-core",
      "is_installable": "False"
    },
    "aiida-cp2k": {
      "code_home": "https://github.com/cp2k/aiida-cp2k",
      "entry_point_prefix": "cp2k",
      "pip_url": "aiida-cp2k",
      "plugin_info": "https://raw.githubusercontent.com/cp2k/aiida-cp2k/master/setup.json",
      "name": "aiida-cp2k",
      "package_name": "aiida_cp2k",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2025-02-04",
        "description": "The official AiiDA plugin for CP2K.",
        "author": "The AiiDA team",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python :: 3"
        ],
        "version": "2.1.1"
      },
      "aiida_version": ">=2.0.0,<3.0.0",
      "entry_points": {
        "aiida.calculations": {
          "cp2k": "aiida_cp2k.calculations:Cp2kCalculation"
        },
        "aiida.parsers": {
          "cp2k_advanced_parser": "aiida_cp2k.parsers:Cp2kAdvancedParser",
          "cp2k_base_parser": "aiida_cp2k.parsers:Cp2kBaseParser",
          "cp2k_tools_parser": "aiida_cp2k.parsers:Cp2kToolsParser"
        },
        "aiida.workflows": {
          "cp2k.base": "aiida_cp2k.workchains:Cp2kBaseWorkChain"
        }
      },
      "commits_count": 19,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-cp2k<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 3
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-cp2k",
      "is_installable": "False"
    },
    "aiida-crystal-dft": {
      "code_home": "https://github.com/tilde-lab/aiida-crystal-dft",
      "development_status": "beta",
      "documentation_url": "https://github.com/tilde-lab/aiida-crystal-dft",
      "entry_point_prefix": "crystal_dft",
      "pip_url": "git+https://github.com/tilde-lab/aiida-crystal-dft",
      "name": "aiida-crystal-dft",
      "package_name": "aiida_crystal_dft",
      "hosted_on": "github.com",
      "metadata": {
        "description": "Yet another AiiDA plugin for CRYSTAL code, mainly intended for use with the cloud infrastructures\n(currently, MPDS)",
        "classifiers": [
          "Development Status :: 4 - Beta",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Intended Audience :: Science/Research",
          "Operating System :: OS Independent",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Topic :: Scientific/Engineering",
          "Topic :: Scientific/Engineering :: Chemistry",
          "Topic :: Scientific/Engineering :: Physics",
          "Topic :: Scientific/Engineering :: Information Analysis"
        ],
        "author": "Andrey Sobolev, based on aiida-crystal17 plugin by Chris Sewell",
        "author_email": "as@tilde.pro"
      },
      "aiida_version": ">=2.0.2",
      "entry_points": {
        "aiida.data": {
          "crystal_dft.basis": "aiida_crystal_dft.data.basis:CrystalBasisData",
          "crystal_dft.basis_family": "aiida_crystal_dft.data.basis_family:CrystalBasisFamilyData"
        },
        "aiida.calculations": {
          "crystal_dft.serial": "aiida_crystal_dft.calculations.serial:CrystalSerialCalculation",
          "crystal_dft.parallel": "aiida_crystal_dft.calculations.parallel:CrystalParallelCalculation",
          "crystal_dft.properties": "aiida_crystal_dft.calculations.properties:PropertiesCalculation"
        },
        "aiida.parsers": {
          "crystal_dft": "aiida_crystal_dft.parsers.cry_pycrystal:CrystalParser",
          "crystal_dft.properties": "aiida_crystal_dft.parsers.properties:PropertiesParser"
        },
        "aiida.workflows": {
          "crystal_dft.base": "aiida_crystal_dft.workflows.base:BaseCrystalWorkChain"
        },
        "aiida.cmdline.data": {
          "crystal_dft": "aiida_crystal_dft.cli.basis:basis_set"
        }
      },
      "commits_count": 12,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-crystal-dft<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 3
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 2
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 2
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        },
        {
          "colorclass": "orange",
          "text": "Other (Data commands)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/tilde-lab/aiida-crystal-dft",
      "is_installable": "False"
    },
    "aiida-crystal17": {
      "code_home": "https://github.com/aiidaplugins/aiida-crystal17",
      "development_status": "beta",
      "documentation_url": "https://aiida-crystal17.readthedocs.io",
      "entry_point_prefix": "crystal17",
      "pip_url": "aiida-crystal17",
      "plugin_info": "https://raw.githubusercontent.com/aiidaplugins/aiida-crystal17/master/setup.json",
      "name": "aiida-crystal17",
      "package_name": "aiida_crystal17",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2020-09-29",
        "description": "AiiDA plugin for running the CRYSTAL17 code",
        "author": "Chris Sewell",
        "author_email": "chrisj_sewell@hotmail.com",
        "license": "MIT",
        "home_page": "https://github.com/chrisjsewell/aiida-crystal17",
        "classifiers": [
          "Framework :: AiiDA",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3.6",
          "Topic :: Scientific/Engineering :: Chemistry",
          "Topic :: Scientific/Engineering :: Physics"
        ],
        "version": "0.11.0"
      },
      "aiida_version": ">=1.4.0,<2.0.0",
      "entry_points": {
        "aiida.calculations": {
          "crystal17.basic": "aiida_crystal17.calculations.cry_basic:CryBasicCalculation",
          "crystal17.doss": "aiida_crystal17.calculations.prop_doss:CryDossCalculation",
          "crystal17.ech3": "aiida_crystal17.calculations.prop_ech3:CryEch3Calculation",
          "crystal17.main": "aiida_crystal17.calculations.cry_main:CryMainCalculation",
          "crystal17.newk": "aiida_crystal17.calculations.prop_newk:CryNewkCalculation",
          "crystal17.ppan": "aiida_crystal17.calculations.prop_ppan:CryPpanCalculation"
        },
        "aiida.cmdline.data": {
          "crystal17.basis": "aiida_crystal17.cmndline.basis_set:basisset",
          "crystal17.parse": "aiida_crystal17.cmndline.cmd_parser:parse",
          "crystal17.symmetry": "aiida_crystal17.cmndline.symmetry:symmetry"
        },
        "aiida.data": {
          "crystal17.basisset": "aiida_crystal17.data.basis_set:BasisSetData",
          "crystal17.gcube": "aiida_crystal17.data.gcube:GaussianCube",
          "crystal17.kinds": "aiida_crystal17.data.kinds:KindData",
          "crystal17.parameters": "aiida_crystal17.data.input_params:CryInputParamsData",
          "crystal17.symmetry": "aiida_crystal17.data.symmetry:SymmetryData"
        },
        "aiida.groups": {
          "crystal17.basisset": "aiida_crystal17.data.basis_set:BasisSetFamily"
        },
        "aiida.parsers": {
          "crystal17.doss": "aiida_crystal17.parsers.cry_doss:CryDossParser",
          "crystal17.ech3": "aiida_crystal17.parsers.cry_ech3:CryEch3Parser",
          "crystal17.main": "aiida_crystal17.parsers.cry_main:CryMainParser",
          "crystal17.newk": "aiida_crystal17.parsers.cry_newk:CryNewkParser",
          "crystal17.ppan": "aiida_crystal17.parsers.cry_ppan:CryPpanParser"
        },
        "aiida.workflows": {
          "crystal17.main.base": "aiida_crystal17.workflows.crystal_main.base:CryMainBaseWorkChain",
          "crystal17.properties": "aiida_crystal17.workflows.crystal_props.base:CryPropertiesWorkChain",
          "crystal17.sym3d": "aiida_crystal17.workflows.symmetrise_3d_struct:Symmetrise3DStructure"
        },
        "console_scripts": {
          "mock_crystal17": "aiida_crystal17.tests.mock_crystal17:main",
          "mock_properties17": "aiida_crystal17.tests.mock_properties17:main"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-crystal17<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 6
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 5
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 5
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 3
        },
        {
          "colorclass": "purple",
          "text": "Console scripts",
          "count": 2
        },
        {
          "colorclass": "orange",
          "text": "Other (Data commands, Groups)",
          "count": 4
        }
      ],
      "pip_install_cmd": "pip install aiida-crystal17",
      "is_installable": "False"
    },
    "aiida-cusp": {
      "code_home": "https://github.com/aiida-cusp/aiida-cusp",
      "documentation_url": "https://aiida-cusp.readthedocs.io",
      "entry_point_prefix": "cusp",
      "pip_url": "https://pypi.org/project/aiida-cusp",
      "name": "aiida-cusp",
      "package_name": "aiida_cusp",
      "hosted_on": "github.com",
      "metadata": {
        "author": "Andreas Stamminger",
        "author_email": "stammingera@gmail.com",
        "version": "0.1.0b2",
        "description": "Custodian based VASP Plugin for AiiDA",
        "classifiers": [
          "Development Status :: 4 - Beta",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Topic :: Scientific/Engineering :: Physics",
          "Topic :: Scientific/Engineering :: Chemistry",
          "Environment :: Plugins",
          "Framework :: AiiDA"
        ]
      },
      "aiida_version": ">=1.3.0,<2.0.0",
      "entry_points": {
        "aiida.data": {
          "cusp.kpoints": "aiida_cusp.data.inputs.vasp_kpoint:VaspKpointData",
          "cusp.poscar": "aiida_cusp.data.inputs.vasp_poscar:VaspPoscarData",
          "cusp.incar": "aiida_cusp.data.inputs.vasp_incar:VaspIncarData",
          "cusp.potcar": "aiida_cusp.data.inputs.vasp_potcar:VaspPotcarData",
          "cusp.vasprun": "aiida_cusp.data.outputs.vasp_vasprun:VaspVasprunData",
          "cusp.outcar": "aiida_cusp.data.outputs.vasp_outcar:VaspOutcarData",
          "cusp.contcar": "aiida_cusp.data.outputs.vasp_contcar:VaspContcarData",
          "cusp.chgcar": "aiida_cusp.data.outputs.vasp_chgcar:VaspChgcarData",
          "cusp.wavecar": "aiida_cusp.data.outputs.vasp_wavecar:VaspWavecarData",
          "cusp.generic": "aiida_cusp.data.outputs.vasp_generic:VaspGenericData",
          "cusp.potcarfile": "aiida_cusp.data.inputs.vasp_potcar:VaspPotcarFile"
        },
        "aiida.calculations": {
          "cusp.vasp": "aiida_cusp.calculators.vasp_calculation:VaspCalculation"
        },
        "aiida.parsers": {
          "cusp.default": "aiida_cusp.parsers.vasp_file_parser:VaspFileParser"
        },
        "aiida.cmdline.data": {
          "potcar": "aiida_cusp.cli.potcar_cmd:potcar"
        }
      },
      "commits_count": 0,
      "development_status": "beta",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-cusp<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'potcar' does not start with prefix 'cusp.'"
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 11
        },
        {
          "colorclass": "orange",
          "text": "Other (Data commands)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install https://pypi.org/project/aiida-cusp",
      "is_installable": "False"
    },
    "aiida-dataframe": {
      "entry_point_prefix": "dataframe",
      "plugin_info": "https://raw.github.com/janssenhenning/aiida-dataframe/main/pyproject.toml",
      "code_home": "https://github.com/janssenhenning/aiida-dataframe",
      "version_file": "https://raw.githubusercontent.com/janssenhenning/aiida-dataframe/main/aiida_dataframe/__init__.py",
      "pip_url": "aiida-dataframe",
      "documentation_url": "https://aiida-dataframe.readthedocs.io/en/latest/",
      "name": "aiida-dataframe",
      "package_name": "aiida_dataframe",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2023-05-05",
        "description": "AiiDA data plugin for pandas DataFrame objects",
        "author_email": "Henning Jan\u00dfen <henning.janssen@gmx.net>",
        "classifiers": [
          "Development Status :: 4 - Beta",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9"
        ],
        "version": "0.1.3"
      },
      "aiida_version": ">=1.0,<3",
      "entry_points": {
        "aiida.cmdline.data": {
          "dataframe": "aiida_dataframe.cli:data_cli"
        },
        "aiida.data": {
          "dataframe.frame": "aiida_dataframe.data.dataframe:PandasFrameData"
        }
      },
      "commits_count": 0,
      "development_status": "beta",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-dataframe<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "red",
          "text": "Data",
          "count": 1
        },
        {
          "colorclass": "orange",
          "text": "Other (Data commands)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-dataframe",
      "is_installable": "False"
    },
    "aiida-ddec": {
      "code_home": "https://github.com/lsmo-epfl/aiida-ddec",
      "entry_point_prefix": "ddec",
      "pip_url": "git+https://github.com/yakutovicha/aiida-ddec",
      "name": "aiida-ddec",
      "package_name": "aiida_ddec",
      "hosted_on": "github.com",
      "metadata": {
        "description": "AiiDA plugin for DDEC code",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11"
        ],
        "author": "Aliaksandr Yakutovich",
        "author_email": "aliaksandr.yakutovich@epfl.ch"
      },
      "aiida_version": "~=2.3",
      "entry_points": {
        "aiida.calculations": {
          "ddec": "aiida_ddec.calculations:DdecCalculation"
        },
        "aiida.parsers": {
          "ddec": "aiida_ddec.parsers:DdecParser"
        },
        "aiida.workflows": {
          "ddec.cp2k_ddec": "aiida_ddec.workchains:Cp2kDdecWorkChain"
        }
      },
      "commits_count": 0,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-ddec<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/yakutovicha/aiida-ddec",
      "is_installable": "False"
    },
    "aiida-defects": {
      "code_home": "https://github.com/epfl-theos/aiida-defects",
      "entry_point_prefix": "defects",
      "pip_url": "aiida-defects",
      "plugin_info": "https://raw.githubusercontent.com/epfl-theos/aiida-defects/master/pyproject.toml",
      "name": "aiida-defects",
      "package_name": "aiida_defects",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2023-03-29",
        "description": "AiiDA-Defects is a plugin for the AiiDA computational materials science framework, and provides tools and automated workflows for the study of defects in materials.",
        "author": "The AiiDA-Defects developers",
        "classifiers": [
          "Development Status :: 4 - Beta",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Programming Language :: Python"
        ],
        "version": "1.0.1"
      },
      "aiida_version": ">=2.0,<3",
      "entry_points": {
        "aiida.data": {
          "defects.array.stability": "aiida_defects.data.data:StabilityData"
        },
        "aiida.workflows": {
          "defects.formation_energy.chemical_potential": "aiida_defects.formation_energy.chemical_potential.chemical_potential:ChemicalPotentialWorkchain",
          "defects.formation_energy.corrections.gaussian_countercharge": "aiida_defects.formation_energy.corrections.gaussian_countercharge.gaussian_countercharge:GaussianCounterChargeWorkchain",
          "defects.formation_energy.corrections.gaussian_countercharge.model_potential": "aiida_defects.formation_energy.corrections.gaussian_countercharge.model_potential.model_potential:ModelPotentialWorkchain",
          "defects.formation_energy.corrections.point_countercharge": "aiida_defects.formation_energy.corrections.point_countercharge.point_countercharge:PointCounterChargeWorkchain",
          "defects.formation_energy.potential_alignment": "aiida_defects.formation_energy.potential_alignment.potential_alignment:PotentialAlignmentWorkchain",
          "defects.formation_energy.qe": "aiida_defects.formation_energy.formation_energy_qe:FormationEnergyWorkchainQE",
          "defects.formation_energy.siesta": "aiida_defects.formation_energy.formation_energy_siesta:FormatonEnergyWorkchainSiesta"
        }
      },
      "commits_count": 0,
      "development_status": "beta",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-defects<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "red",
          "text": "Data",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 7
        }
      ],
      "pip_install_cmd": "pip install aiida-defects",
      "is_installable": "False"
    },
    "aiida-diff": {
      "code_home": "https://github.com/aiidateam/aiida-diff",
      "development_status": "stable",
      "documentation_url": "https://aiida-diff.readthedocs.io/",
      "entry_point_prefix": "diff",
      "pip_url": "git+https://github.com/aiidateam/aiida-diff#egg=aiida-diff-0.1.0a0",
      "name": "aiida-diff",
      "package_name": "aiida_diff",
      "hosted_on": "github.com",
      "metadata": {
        "description": "AiiDA demo plugin that wraps the `diff` executable for computing the difference between two files.",
        "classifiers": [
          "Programming Language :: Python",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Development Status :: 3 - Alpha",
          "Framework :: AiiDA"
        ],
        "author": "The AiiDA Team"
      },
      "aiida_version": ">=2.5,<3",
      "entry_points": {
        "aiida.data": {
          "diff": "aiida_diff.data:DiffParameters"
        },
        "aiida.calculations": {
          "diff": "aiida_diff.calculations:DiffCalculation"
        },
        "aiida.parsers": {
          "diff": "aiida_diff.parsers:DiffParser"
        },
        "aiida.cmdline.data": {
          "diff": "aiida_diff.cli:data_cli"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-diff<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W005'>W005</a>: Development status in classifiers (alpha) does not match development_status in metadata (stable)",
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 1
        },
        {
          "colorclass": "orange",
          "text": "Other (Data commands)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/aiidateam/aiida-diff#egg=aiida-diff-0.1.0a0",
      "is_installable": "False"
    },
    "aiida-donothing": {
      "code_home": "https://github.com/atztogo/aiida-donothing",
      "entry_point_prefix": "donothing",
      "name": "aiida-donothing",
      "package_name": "aiida_donothing",
      "hosted_on": "github.com",
      "metadata": {
        "author": "Atsushi Togo",
        "author_email": "atz.togo@gmail.com",
        "version": "0.1",
        "description": "AiiDA calculation plugin for doing nothing",
        "classifiers": [
          "Programming Language :: Python",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Framework :: AiiDA"
        ]
      },
      "aiida_version": ">=1.6.5,<2.0.0",
      "entry_points": {
        "aiida.calculations": {
          "donothing.donothing": "aiida_donothing.calculations.donothing:DoNothingCalculation"
        },
        "aiida.parsers": {
          "donothing.donothing": "aiida_donothing.parsers.donothing:DoNothingParser"
        }
      },
      "commits_count": 0,
      "development_status": "planning",
      "errors": [],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        }
      ],
      "pip_install_cmd": "See source code repository."
    },
    "aiida-dynamic-workflows": {
      "code_home": "https://github.com/microsoft/aiida-dynamic-workflows",
      "entry_point_prefix": "dynamic_workflows",
      "name": "aiida-dynamic-workflows",
      "package_name": "aiida_dynamic_workflows",
      "hosted_on": "github.com",
      "metadata": {},
      "aiida_version": null,
      "entry_points": {},
      "commits_count": 0,
      "development_status": "planning",
      "errors": [],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Cannot fetch all data from PyPI and missing plugin_info key!",
        "<a href='https://github.com/aiidateam/aiida-registry#W002'>W002</a>: AiiDA version not found"
      ],
      "summaryinfo": [],
      "pip_install_cmd": "See source code repository."
    },
    "aiida-environ": {
      "code_home": "https://github.com/environ-developers/aiida-environ",
      "entry_point_prefix": "environ",
      "pip_url": "git+https://github.com/environ-developers/aiida-environ",
      "name": "aiida-environ",
      "package_name": "aiida_environ",
      "hosted_on": "github.com",
      "metadata": {
        "version": "1.0.0",
        "description": "AiiDA plugin for Environ",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9"
        ],
        "author_email": "materialab@unt.edu"
      },
      "aiida_version": ">=1.6",
      "entry_points": {
        "aiida.calculations": {
          "environ.pw": "aiida_environ.calculations.pw:EnvPwCalculation",
          "environ.finite": "aiida_environ.calculations.finite:calculate_finite_differences"
        },
        "aiida.data": {
          "environ.charges": "aiida_environ.data.charge:EnvironChargeData"
        },
        "aiida.parsers": {
          "environ.pw": "aiida_environ.parsers.pw:EnvPwParser"
        },
        "aiida.workflows": {
          "environ.pw.base": "aiida_environ.workflows.pw.base:EnvPwBaseWorkChain",
          "environ.pw.relax": "aiida_environ.workflows.pw.relax:EnvPwRelaxWorkChain",
          "environ.pw.solvation": "aiida_environ.workflows.pw.solvation:PwSolvationWorkChain",
          "environ.pw.force_test": "aiida_environ.workflows.pw.force_test:EnvPwForceTestWorkChain"
        }
      },
      "commits_count": 0,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-environ<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W003'>W003</a>: Missing classifier 'Framework :: AiiDA'"
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 2
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 4
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/environ-developers/aiida-environ",
      "is_installable": "False"
    },
    "aiida-eon": {
      "code_home": "https://github.com/HaoZeke/aiida-eon",
      "entry_point_prefix": "eon",
      "name": "aiida-eon",
      "package_name": "aiida_eon",
      "hosted_on": "github.com",
      "metadata": {},
      "aiida_version": null,
      "entry_points": {},
      "commits_count": 0,
      "development_status": "planning",
      "errors": [],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Cannot fetch all data from PyPI and missing plugin_info key!",
        "<a href='https://github.com/aiidateam/aiida-registry#W002'>W002</a>: AiiDA version not found"
      ],
      "summaryinfo": [],
      "pip_install_cmd": "See source code repository."
    },
    "aiida-eonclient": {
      "code_home": "https://github.com/HaoZeke/aiida-eonclient",
      "entry_point_prefix": "eonclient",
      "name": "aiida-eonclient",
      "package_name": "aiida_eonclient",
      "hosted_on": "github.com",
      "metadata": {},
      "aiida_version": null,
      "entry_points": {},
      "commits_count": 0,
      "development_status": "planning",
      "errors": [],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Cannot fetch all data from PyPI and missing plugin_info key!",
        "<a href='https://github.com/aiidateam/aiida-registry#W002'>W002</a>: AiiDA version not found"
      ],
      "summaryinfo": [],
      "pip_install_cmd": "See source code repository."
    },
    "aiida-fans": {
      "entry_point_prefix": "fans",
      "code_home": "https://github.com/ethan-shanahan/aiida-fans",
      "documentation_url": "https://aiida-fans.readthedocs.io/en/latest/",
      "name": "aiida-fans",
      "package_name": "aiida_fans",
      "hosted_on": "github.com",
      "metadata": {
        "description": "AiiDA plugin for FANS, an FFT-based homogenization solver.",
        "classifiers": [
          "Natural Language :: English",
          "Programming Language :: Python",
          "Operating System :: POSIX :: Linux",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
          "Development Status :: 3 - Alpha",
          "Framework :: AiiDA"
        ],
        "author": "Ethan Shanahan",
        "author_email": "ethan.shanahan@gmail.com"
      },
      "aiida_version": ">=2.3",
      "entry_points": {
        "aiida.data": {
          "fans": "aiida_fans.data:FANSParameters"
        },
        "aiida.calculations": {
          "fans": "aiida_fans.calculations:FANSCalculation"
        },
        "aiida.parsers": {
          "fans": "aiida_fans.parsers:FANSParser"
        },
        "aiida.cmdline.data": {
          "fans": "aiida_fans.cli:data_cli"
        }
      },
      "commits_count": 81,
      "development_status": "alpha",
      "errors": [],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 1
        },
        {
          "colorclass": "orange",
          "text": "Other (Data commands)",
          "count": 1
        }
      ],
      "pip_install_cmd": "See source code repository."
    },
    "aiida-fenics": {
      "code_home": "https://github.com/broeder-j/aiida-fenics/tree/master",
      "entry_point_prefix": "fenics",
      "pip_url": "git+https://github.com/broeder-j/aiida-fenics",
      "name": "aiida-fenics",
      "package_name": "aiida_fenics",
      "hosted_on": "github.com",
      "metadata": {
        "author": "Sebastiaan P. Huber",
        "author_email": "mail@sphuber.net",
        "version": "0.1.0",
        "description": "AiiDA plugin for the FEniCS computing platform for solving partial differential equations.",
        "classifiers": [
          "Development Status :: 2 - Pre-Alpha",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Operating System :: POSIX :: Linux",
          "Operating System :: MacOS :: MacOS X",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9"
        ]
      },
      "aiida_version": "~=1.6",
      "entry_points": {
        "aiida.workflows": {
          "fenics.geometry_poisson": "aiida_fenics.workflows.geometry_poisson:GeometryPoisson"
        }
      },
      "commits_count": 0,
      "development_status": "pre-alpha",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-fenics<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/broeder-j/aiida-fenics",
      "is_installable": "False"
    },
    "aiida-fhiaims": {
      "entry_point_prefix": "fhiaims",
      "code_home": "https://gitlab.com/FHI-aims-club/utilities/aiida-fhiaims",
      "pip_url": "git+https://gitlab.com/FHI-aims-club/utilities/aiida-fhiaims",
      "version_file": "https://gitlab.com/FHI-aims-club/utilities/aiida-fhiaims/-/raw/master/aiida_fhiaims/__init__.py",
      "name": "aiida-fhiaims",
      "package_name": "aiida_fhiaims",
      "hosted_on": "gitlab.com",
      "metadata": {
        "description": "An AiiDA plugin for FHI-aims code",
        "classifiers": [
          "Programming Language :: Python",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Development Status :: 3 - Alpha",
          "Framework :: AiiDA"
        ],
        "author": "Andrey Sobolev",
        "author_email": "andrey.n.sobolev@gmail.com"
      },
      "aiida_version": ">=2.0,<3",
      "entry_points": {
        "aiida.cmdline.data": {
          "fhiaims.species_defaults": "aiida_fhiaims.cli.species_defaults:species_defaults"
        },
        "aiida.data": {
          "fhiaims.species_file": "aiida_fhiaims.data.species_file:BasisFile",
          "fhiaims.parameters": "aiida_fhiaims.data.parameters:AimsParameters"
        },
        "aiida.groups": {
          "fhiaims.species_family": "aiida_fhiaims.data.species_family:BasisFamily"
        },
        "aiida.calculations": {
          "fhiaims": "aiida_fhiaims.calculations:AimsCalculation"
        },
        "aiida.parsers": {
          "fhiaims.json": "aiida_fhiaims.parsers.aims_json:AimsJSONParser",
          "fhiaims.out": "aiida_fhiaims.parsers.aims_out:AimsOutParser"
        }
      },
      "commits_count": 0,
      "development_status": "alpha",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-fhiaims<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 2
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 2
        },
        {
          "colorclass": "orange",
          "text": "Other (Data commands, Groups)",
          "count": 2
        }
      ],
      "pip_install_cmd": "pip install git+https://gitlab.com/FHI-aims-club/utilities/aiida-fhiaims",
      "is_installable": "False"
    },
    "aiida-firecrest": {
      "code_home": "https://github.com/aiidateam/aiida-firecrest",
      "entry_point_prefix": "firecrest",
      "pip_url": "aiida-firecrest",
      "plugin_info": "https://raw.githubusercontent.com/aiidateam/aiida-firecrest/main/pyproject.toml",
      "name": "aiida-firecrest",
      "package_name": "aiida_firecrest",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2022-01-14",
        "description": "AiiDA Transport/Scheduler plugins for interfacing with FirecREST.",
        "author_email": "Chris Sewell <chrisj_sewell@hotmail.com>",
        "classifiers": [
          "Development Status :: 3 - Alpha",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: Implementation :: CPython",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "version": "0.1.0a1"
      },
      "aiida_version": "<2",
      "entry_points": {
        "aiida.schedulers": {
          "firecrest": "aiida_firecrest.scheduler:FirecrestScheduler"
        },
        "aiida.transports": {
          "firecrest": "aiida_firecrest.transport:FirecrestTransport"
        },
        "console_scripts": {
          "aiida-firecrest-cli": "aiida_firecrest.cli:main"
        }
      },
      "commits_count": 10,
      "development_status": "alpha",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-firecrest<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "purple",
          "text": "Console scripts",
          "count": 1
        },
        {
          "colorclass": "orange",
          "text": "Other (Schedulers, Transports)",
          "count": 2
        }
      ],
      "pip_install_cmd": "pip install --pre aiida-firecrest",
      "is_installable": "False"
    },
    "aiida-fireworks-scheduler": {
      "code_home": "https://github.com/zhubonan/aiida-fireworks-scheduler",
      "development_status": "beta",
      "documentation_url": "https://aiida-fireworks-scheduler.readthedocs.io",
      "entry_point_prefix": "fireworks_scheduler",
      "pip_url": "git+https://github.com/zhubonan/aiida-fireworks-scheduler",
      "name": "aiida-fireworks-scheduler",
      "package_name": "aiida_fireworks_scheduler",
      "hosted_on": "github.com",
      "metadata": {
        "author": "Bonan Zhu",
        "author_email": "zhubonan@outlook.com",
        "version": "1.2.0",
        "description": "AiiDA plugin to allow using `fireworks` as the execution engine for `CalcJob`.",
        "classifiers": [
          "Programming Language :: Python",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Framework :: AiiDA"
        ]
      },
      "aiida_version": null,
      "entry_points": {
        "aiida.schedulers": {
          "fireworks": "aiida_fireworks_scheduler.fwscheduler:FwScheduler",
          "fireworks_scheduler.default": "aiida_fireworks_scheduler.fwscheduler:FwScheduler",
          "fireworks_scheduler.keepenv": "aiida_fireworks_scheduler.fwscheduler:FwSchedulerKeepEnv"
        },
        "aiida.cmdline.data": {
          "fireworks-scheduler": "aiida_fireworks_scheduler.cmdline:fw_cli"
        },
        "console_scripts": {
          "arlaunch": "aiida_fireworks_scheduler.scripts.arlaunch_run:arlaunch"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-fireworks-scheduler<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W002'>W002</a>: AiiDA version not found",
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead.",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'fireworks' does not start with prefix 'fireworks_scheduler.'",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'fireworks-scheduler' does not start with prefix 'fireworks_scheduler.'"
      ],
      "summaryinfo": [
        {
          "colorclass": "purple",
          "text": "Console scripts",
          "count": 1
        },
        {
          "colorclass": "orange",
          "text": "Other (Data commands, Schedulers)",
          "count": 4
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/zhubonan/aiida-fireworks-scheduler",
      "is_installable": "False"
    },
    "aiida-fleur": {
      "code_home": "https://github.com/JuDFTteam/aiida-fleur/tree/develop",
      "development_status": "stable",
      "documentation_url": "https://aiida-fleur.readthedocs.io/",
      "entry_point_prefix": "fleur",
      "pip_url": "aiida-fleur",
      "plugin_info": "https://raw.github.com/JuDFTteam/aiida-fleur/develop/setup.json",
      "name": "aiida-fleur",
      "package_name": "aiida_fleur",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2023-05-03",
        "description": "AiiDA Plugin for running the FLEUR code and its input generator. Also includes high-level workchains and utilities",
        "author_email": "The JuDFT team <j.broeder@fz-juelich.de>",
        "classifiers": [
          "Environment :: Plugins",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Topic :: Scientific/Engineering :: Physics"
        ],
        "version": "2.0.0"
      },
      "aiida_version": ">=2.0.1,<3.0.0",
      "entry_points": {
        "aiida.calculations": {
          "fleur.fleur": "aiida_fleur.calculation.fleur:FleurCalculation",
          "fleur.inpgen": "aiida_fleur.calculation.fleurinputgen:FleurinputgenCalculation"
        },
        "aiida.data": {
          "fleur.fleurinp": "aiida_fleur.data.fleurinp:FleurinpData"
        },
        "aiida.parsers": {
          "fleur.fleurinpgenparser": "aiida_fleur.parsers.fleur_inputgen:Fleur_inputgenParser",
          "fleur.fleurparser": "aiida_fleur.parsers.fleur:FleurParser"
        },
        "aiida.workflows": {
          "fleur.banddos": "aiida_fleur.workflows.banddos:FleurBandDosWorkChain",
          "fleur.base": "aiida_fleur.workflows.base_fleur:FleurBaseWorkChain",
          "fleur.base_relax": "aiida_fleur.workflows.base_relax:FleurBaseRelaxWorkChain",
          "fleur.cfcoeff": "aiida_fleur.workflows.cfcoeff:FleurCFCoeffWorkChain",
          "fleur.corehole": "aiida_fleur.workflows.corehole:FleurCoreholeWorkChain",
          "fleur.create_magnetic": "aiida_fleur.workflows.create_magnetic_film:FleurCreateMagneticWorkChain",
          "fleur.dmi": "aiida_fleur.workflows.dmi:FleurDMIWorkChain",
          "fleur.dos": "aiida_fleur.workflows.dos:fleur_dos_wc",
          "fleur.eos": "aiida_fleur.workflows.eos:FleurEosWorkChain",
          "fleur.init_cls": "aiida_fleur.workflows.initial_cls:FleurInitialCLSWorkChain",
          "fleur.mae": "aiida_fleur.workflows.mae:FleurMaeWorkChain",
          "fleur.mae_conv": "aiida_fleur.workflows.mae_conv:FleurMaeConvWorkChain",
          "fleur.orbcontrol": "aiida_fleur.workflows.orbcontrol:FleurOrbControlWorkChain",
          "fleur.relax": "aiida_fleur.workflows.relax:FleurRelaxWorkChain",
          "fleur.relax_torque": "aiida_fleur.workflows.relax_torque:FleurRelaxTorqueWorkChain",
          "fleur.scf": "aiida_fleur.workflows.scf:FleurScfWorkChain",
          "fleur.ssdisp": "aiida_fleur.workflows.ssdisp:FleurSSDispWorkChain",
          "fleur.ssdisp_conv": "aiida_fleur.workflows.ssdisp_conv:FleurSSDispConvWorkChain",
          "fleur.strain": "aiida_fleur.workflows.strain:FleurStrainWorkChain"
        },
        "console_scripts": {
          "aiida-fleur": "aiida_fleur.cmdline:cmd_root"
        }
      },
      "commits_count": 20,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-fleur<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 2
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 2
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 19
        },
        {
          "colorclass": "purple",
          "text": "Console scripts",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-fleur",
      "is_installable": "False"
    },
    "aiida-flexpart": {
      "code_home": "https://github.com/aiidaplugins/aiida-flexpart",
      "entry_point_prefix": "flexpart",
      "pip_url": "git+https://github.com/aiidaplugins/aiida-flexpart",
      "name": "aiida-flexpart",
      "package_name": "aiida_flexpart",
      "hosted_on": "github.com",
      "metadata": {
        "version": "0.2.1",
        "description": "AiiDA plugin for the FLEXPART code (simulation of atmospheric transport processes).",
        "classifiers": [
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Framework :: AiiDA",
          "Development Status :: 3 - Alpha",
          "Topic :: Scientific/Engineering :: Atmospheric Science",
          "Programming Language :: Python :: 3"
        ],
        "author": ""
      },
      "aiida_version": ">=1.6.5,<3.0.0",
      "entry_points": {
        "aiida.data": {
          "netcdf.data": "aiida_flexpart.data.nc_data:NetCdfData"
        },
        "aiida.calculations": {
          "flexpart.cosmo": "aiida_flexpart.calculations.flexpart_cosmo:FlexpartCosmoCalculation",
          "flexpart.ifs": "aiida_flexpart.calculations.flexpart_ifs:FlexpartIfsCalculation",
          "flexpart.post": "aiida_flexpart.calculations.flexpart_post:PostProcessingCalculation",
          "collect.sensitivities": "aiida_flexpart.calculations.collect_sens:CollectSensitivitiesCalculation",
          "inversion.calc": "aiida_flexpart.calculations.inversion:Inversion"
        },
        "aiida.parsers": {
          "flexpart.cosmo": "aiida_flexpart.parsers.flexpart_cosmo:FlexpartCosmoParser",
          "flexpart.ifs": "aiida_flexpart.parsers.flexpart_ifs:FlexpartIfsParser",
          "flexpart.post": "aiida_flexpart.parsers.flexpart_post:FlexpartPostParser",
          "collect.sensitivities": "aiida_flexpart.parsers.collect_sens:CollectSensParser",
          "inversion.calc": "aiida_flexpart.parsers.inversion:InvesrionParser"
        },
        "aiida.workflows": {
          "flexpart.multi_dates": "aiida_flexpart.workflows.multi_dates_workflow:FlexpartMultipleDatesWorkflow",
          "flexpart.multi_workflow": "aiida_flexpart.workflows.parent_workflow:ParentWorkflow",
          "inspect.workflow": "aiida_flexpart.workflows.inspect:InspectWorkflow",
          "inversion.workflow": "aiida_flexpart.workflows.inversion_workflow:InversionWorkflow"
        }
      },
      "commits_count": 36,
      "development_status": "alpha",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-flexpart<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'netcdf.data' does not start with prefix 'flexpart.'",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'collect.sensitivities' does not start with prefix 'flexpart.'",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'inversion.calc' does not start with prefix 'flexpart.'",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'collect.sensitivities' does not start with prefix 'flexpart.'",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'inversion.calc' does not start with prefix 'flexpart.'",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'inspect.workflow' does not start with prefix 'flexpart.'",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'inversion.workflow' does not start with prefix 'flexpart.'"
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 5
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 5
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 4
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/aiidaplugins/aiida-flexpart",
      "is_installable": "False"
    },
    "aiida-gaussian": {
      "code_home": "https://github.com/nanotech-empa/aiida-gaussian",
      "entry_point_prefix": "gaussian",
      "pip_url": "aiida-gaussian",
      "plugin_info": "https://raw.githubusercontent.com/nanotech-empa/aiida-gaussian/master/pyproject.toml",
      "name": "aiida-gaussian",
      "package_name": "aiida_gaussian",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2024-09-25",
        "description": "AiiDA plugin for the Gaussian quantum chemistry software.",
        "author": "Kristjan Eimre, Pezhman Zarabadi-Poor, Aliaksandr Yakutovich",
        "license": "MIT",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Operating System :: OS Independent",
          "Programming Language :: Python :: 3",
          "Topic :: Scientific/Engineering :: Chemistry",
          "Topic :: Scientific/Engineering :: Physics",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "version": "2.2.0"
      },
      "aiida_version": ">=2.0.0,<3.0.0",
      "entry_points": {
        "aiida.calculations": {
          "gaussian": "aiida_gaussian.calculations:GaussianCalculation",
          "gaussian.cubegen": "aiida_gaussian.calculations:CubegenCalculation",
          "gaussian.formchk": "aiida_gaussian.calculations:FormchkCalculation"
        },
        "aiida.parsers": {
          "gaussian.advanced": "aiida_gaussian.parsers.gaussian:GaussianAdvancedParser",
          "gaussian.base": "aiida_gaussian.parsers.gaussian:GaussianBaseParser",
          "gaussian.cubegen_base": "aiida_gaussian.parsers.cubegen:CubegenBaseParser"
        },
        "aiida.workflows": {
          "gaussian.base": "aiida_gaussian.workchains:GaussianBaseWorkChain",
          "gaussian.cubes": "aiida_gaussian.workchains:GaussianCubesWorkChain"
        }
      },
      "commits_count": 4,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-gaussian<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 3
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 3
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 2
        }
      ],
      "pip_install_cmd": "pip install aiida-gaussian",
      "is_installable": "False"
    },
    "aiida-gaussian-datatypes": {
      "code_home": "https://github.com/dev-zero/aiida-gaussian-datatypes",
      "documentation_url": "https://github.com/dev-zero/aiida-gaussian-datatypes/blob/master/README.md",
      "entry_point_prefix": "gaussian",
      "pip_url": "aiida-gaussian-datatypes",
      "plugin_info": "https://raw.github.com/dev-zero/aiida-gaussian-datatypes/master/setup.json",
      "name": "aiida-gaussian-datatypes",
      "package_name": "aiida_gaussian_datatypes",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2022-07-22",
        "description": "AiiDA data plugin to manage gaussian datatypes (basis sets and pseudopotentials) as first-class citizens",
        "author": "Tiziano M\u00fcller",
        "author_email": "tiziano.mueller@chem.uzh.ch",
        "license": "MIT License",
        "home_page": "https://github.com/dev-zero/aiida-gaussian-datatypes",
        "classifiers": [
          "Development Status :: 4 - Beta",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Topic :: Scientific/Engineering :: Chemistry",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "version": "0.5.1"
      },
      "aiida_version": ">=1.6.2",
      "entry_points": {
        "aiida.cmdline.data": {
          "gaussian.basisset": "aiida_gaussian_datatypes.basisset.cli:cli",
          "gaussian.pseudo": "aiida_gaussian_datatypes.pseudopotential.cli:cli"
        },
        "aiida.data": {
          "gaussian.basisset": "aiida_gaussian_datatypes.basisset.data:BasisSet",
          "gaussian.pseudo": "aiida_gaussian_datatypes.pseudopotential.data:Pseudopotential"
        },
        "aiida.groups": {
          "gaussian.basisset": "aiida_gaussian_datatypes.groups:BasisSetGroup",
          "gaussian.pseudo": "aiida_gaussian_datatypes.groups:PseudopotentialGroup"
        }
      },
      "commits_count": 0,
      "development_status": "beta",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-gaussian-datatypes<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W009'>W009</a>: Prefix 'gaussian' does not follow naming convention."
      ],
      "summaryinfo": [
        {
          "colorclass": "red",
          "text": "Data",
          "count": 2
        },
        {
          "colorclass": "orange",
          "text": "Other (Data commands, Groups)",
          "count": 4
        }
      ],
      "pip_install_cmd": "pip install aiida-gaussian-datatypes",
      "is_installable": "False"
    },
    "aiida-gollum": {
      "code_home": "https://github.com/garsua/aiida-gollum/",
      "documentation_url": "https://aiida-gollum.readthedocs.io/",
      "entry_point_prefix": "gollum",
      "pip_url": "git+https://github.com/garsua/aiida-gollum",
      "name": "aiida-gollum",
      "package_name": "aiida_gollum",
      "hosted_on": "github.com",
      "metadata": {
        "author": "Victor M. Garcia-Suarez",
        "author_email": "vm.garcia@cinn.es",
        "version": "0.12.0",
        "description": "A plugin for Gollum functionality within AiiDA framework.",
        "classifiers": [
          "License :: OSI Approved :: MIT License",
          "Framework :: AiiDA",
          "Programming Language :: Python :: 2.7",
          "Development Status :: 1 - Alpha"
        ]
      },
      "aiida_version": ">=0.12.0",
      "entry_points": {
        "aiida.calculations": {
          "gollum.gollum": "aiida_gollum.calculations.gollum:GollumCalculation"
        },
        "aiida.parsers": {
          "gollum.parser": "aiida_gollum.parsers.gollum:GollumParser"
        }
      },
      "commits_count": 0,
      "development_status": "planning",
      "errors": [],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/garsua/aiida-gollum"
    },
    "aiida-graphql": {
      "code_home": "https://github.com/dev-zero/aiida-graphql",
      "entry_point_prefix": "graphql",
      "pip_url": "aiida-graphql",
      "name": "aiida-graphql",
      "package_name": "aiida_graphql",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2019-10-28",
        "description": "Strawberry-based GraphQL API Server for AiiDA",
        "author": "Tiziano M\u00fcller",
        "author_email": "tiziano.mueller@chem.uzh.ch",
        "license": "MIT",
        "home_page": "https://github.com/dev-zero/aiida-graphql",
        "classifiers": [
          "Development Status :: 3 - Alpha",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Operating System :: OS Independent",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "version": "0.0.2"
      },
      "aiida_version": ">=1.0.0b6,<2.0.0",
      "entry_points": {},
      "commits_count": 0,
      "development_status": "alpha",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-graphql<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W020'>W020</a>: Unable to read wheel file from PyPI release: <pre>No entry_points.txt found in wheel</pre>",
        "<a href='https://github.com/aiidateam/aiida-registry#W003'>W003</a>: Missing classifier 'Framework :: AiiDA'"
      ],
      "summaryinfo": [],
      "pip_install_cmd": "pip install aiida-graphql",
      "is_installable": "False"
    },
    "aiida-gromacs": {
      "code_home": "https://github.com/PSDI-UK/aiida-gromacs",
      "documentation_url": "https://aiida-gromacs.readthedocs.io/",
      "entry_point_prefix": "gromacs",
      "pip_url": "aiida-gromacs",
      "plugin_info": "https://raw.githubusercontent.com/PSDI-UK/aiida-gromacs/master/pyproject.toml",
      "name": "aiida-gromacs",
      "package_name": "aiida_gromacs",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2025-02-10",
        "description": "A plugin for using GROMACS with AiiDA for molecular dymanics simulations.",
        "author_email": "James Gebbie-Rayet <james.gebbie@stfc.ac.uk>, Jas Kalayan <jas.kalayan@stfc.ac.uk>",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Programming Language :: Python"
        ],
        "version": "2.0.10"
      },
      "aiida_version": ">=2.4.0,<3",
      "entry_points": {
        "aiida.calculations": {
          "gromacs.editconf": "aiida_gromacs.calculations.editconf:EditconfCalculation",
          "gromacs.genericMD": "aiida_gromacs.calculations.genericMD:GenericCalculation",
          "gromacs.genion": "aiida_gromacs.calculations.genion:GenionCalculation",
          "gromacs.grompp": "aiida_gromacs.calculations.grompp:GromppCalculation",
          "gromacs.make_ndx": "aiida_gromacs.calculations.make_ndx:Make_ndxCalculation",
          "gromacs.mdrun": "aiida_gromacs.calculations.mdrun:MdrunCalculation",
          "gromacs.pdb2gmx": "aiida_gromacs.calculations.pdb2gmx:Pdb2gmxCalculation",
          "gromacs.solvate": "aiida_gromacs.calculations.solvate:SolvateCalculation"
        },
        "aiida.cmdline.data": {
          "provenance": "aiida_gromacs.commands.provenance:provenance"
        },
        "aiida.data": {
          "gromacs.editconf": "aiida_gromacs.data.editconf:EditconfParameters",
          "gromacs.genion": "aiida_gromacs.data.genion:GenionParameters",
          "gromacs.grompp": "aiida_gromacs.data.grompp:GromppParameters",
          "gromacs.make_ndx": "aiida_gromacs.data.make_ndx:Make_ndxParameters",
          "gromacs.mdrun": "aiida_gromacs.data.mdrun:MdrunParameters",
          "gromacs.pdb2gmx": "aiida_gromacs.data.pdb2gmx:Pdb2gmxParameters",
          "gromacs.solvate": "aiida_gromacs.data.solvate:SolvateParameters"
        },
        "aiida.parsers": {
          "gromacs.editconf": "aiida_gromacs.parsers.editconf:EditconfParser",
          "gromacs.genericMD": "aiida_gromacs.parsers.genericMD:GenericParser",
          "gromacs.genion": "aiida_gromacs.parsers.genion:GenionParser",
          "gromacs.grompp": "aiida_gromacs.parsers.grompp:GromppParser",
          "gromacs.make_ndx": "aiida_gromacs.parsers.make_ndx:Make_ndxParser",
          "gromacs.mdrun": "aiida_gromacs.parsers.mdrun:MdrunParser",
          "gromacs.pdb2gmx": "aiida_gromacs.parsers.pdb2gmx:Pdb2gmxParser",
          "gromacs.solvate": "aiida_gromacs.parsers.solvate:SolvateParser"
        },
        "aiida.workflows": {
          "gromacs.setup": "aiida_gromacs.workflows.simsetup:SetupWorkChain"
        },
        "console_scripts": {
          "createarchive": "aiida_gromacs.cli.createarchive:cli",
          "genericMD": "aiida_gromacs.cli.genericMD:cli",
          "gmx_editconf": "aiida_gromacs.cli.editconf:cli",
          "gmx_genion": "aiida_gromacs.cli.genion:cli",
          "gmx_grompp": "aiida_gromacs.cli.grompp:cli",
          "gmx_make_ndx": "aiida_gromacs.cli.make_ndx:cli",
          "gmx_mdrun": "aiida_gromacs.cli.mdrun:cli",
          "gmx_pdb2gmx": "aiida_gromacs.cli.pdb2gmx:cli",
          "gmx_solvate": "aiida_gromacs.cli.solvate:cli"
        }
      },
      "commits_count": 164,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-gromacs<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'provenance' does not start with prefix 'gromacs.'"
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 8
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 8
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 7
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        },
        {
          "colorclass": "purple",
          "text": "Console scripts",
          "count": 9
        },
        {
          "colorclass": "orange",
          "text": "Other (Data commands)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-gromacs",
      "is_installable": "False"
    },
    "aiida-grouppathx": {
      "code_home": "https://github.com/zhubonan/aiida-grouppathx",
      "development_status": "beta",
      "entry_point_prefix": "grouppathx",
      "pip_url": "aiida-grouppathx",
      "plugin_info": "https://raw.githubusercontent.com/zhubonan/aiida-grouppathx/master/pyproject.toml",
      "name": "aiida-grouppathx",
      "package_name": "aiida_grouppathx",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2024-12-20",
        "description": "AiiDA plugin provides the GroupPathX class",
        "author_email": "Bonan Zhu <zhubonan@outlook.com>",
        "classifiers": [
          "Development Status :: 3 - Alpha",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Programming Language :: Python"
        ],
        "version": "0.2.5"
      },
      "aiida_version": ">=1.6.4,<3",
      "entry_points": {
        "aiida.cmdline.data": {
          "gpx": "aiida_grouppathx.cli:grouppathx_cli"
        }
      },
      "commits_count": 20,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-grouppathx<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W005'>W005</a>: Development status in classifiers (alpha) does not match development_status in metadata (beta)",
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead.",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'gpx' does not start with prefix 'grouppathx.'"
      ],
      "summaryinfo": [
        {
          "colorclass": "orange",
          "text": "Other (Data commands)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-grouppathx",
      "is_installable": "False"
    },
    "aiida-gudhi": {
      "code_home": "https://github.com/ltalirz/aiida-gudhi",
      "development_status": "beta",
      "entry_point_prefix": "gudhi",
      "pip_url": "aiida-gudhi",
      "plugin_info": "https://raw.github.com/ltalirz/aiida-gudhi/master/setup.json",
      "name": "aiida-gudhi",
      "package_name": "aiida_gudhi",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2018-06-21",
        "description": "AiiDA plugin for the [GUDHI](http://gudhi.gforge.inria.fr/) library for topological data analysis.",
        "author": "Leopold Talirz",
        "author_email": "leopold.talirz@gmail.com",
        "license": "MIT",
        "home_page": "https://github.com/ltalirz/aiida-gudhi",
        "classifiers": [
          "Programming Language :: Python"
        ],
        "version": "0.1.0a3"
      },
      "aiida_version": "*",
      "entry_points": {
        "aiida.calculations": {
          "gudhi.rdm": "aiida_gudhi.calculations.rips:RipsDistanceMatrixCalculation"
        },
        "aiida.data": {
          "gudhi.rdm": "aiida_gudhi.data.rips:RipsDistanceMatrixParameters"
        },
        "aiida.parsers": {
          "gudhi.rdm": "aiida_gudhi.parsers.rips:RipsParser"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-gudhi<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W003'>W003</a>: Missing classifier 'Framework :: AiiDA'",
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install --pre aiida-gudhi",
      "is_installable": "False"
    },
    "aiida-gulp": {
      "code_home": "https://github.com/aiidaplugins/aiida-gulp",
      "development_status": "beta",
      "documentation_url": "https://aiida-gulp.readthedocs.io",
      "entry_point_prefix": "gulp",
      "pip_url": "aiida-gulp",
      "plugin_info": "https://raw.githubusercontent.com/aiidaplugins/aiida-gulp/master/setup.json",
      "name": "aiida-gulp",
      "package_name": "aiida_gulp",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2019-10-30",
        "description": "AiiDA plugin for running the GULP MD code",
        "author": "Chris Sewell",
        "author_email": "chrisj_sewell@hotmail.com",
        "license": "MIT",
        "home_page": "https://github.com/chrisjsewell/aiida-gulp",
        "classifiers": [
          "Framework :: AiiDA",
          "Programming Language :: Python",
          "Programming Language :: Python :: 2.7",
          "Programming Language :: Python :: 3.6",
          "Topic :: Scientific/Engineering :: Chemistry",
          "Topic :: Scientific/Engineering :: Physics"
        ],
        "version": "0.10.0b5"
      },
      "aiida_version": "1.0.0b5",
      "entry_points": {
        "aiida.calculations": {
          "gulp.fitting": "aiida_gulp.calculations.gulp_fitting:GulpFittingCalculation",
          "gulp.optimize": "aiida_gulp.calculations.gulp_optimize:GulpOptCalculation",
          "gulp.single": "aiida_gulp.calculations.gulp_single:GulpSingleCalculation"
        },
        "aiida.cmdline.data": {
          "gulp.potentials": "aiida_gulp.cmndline.potentials:potentials"
        },
        "aiida.data": {
          "gulp.potential": "aiida_gulp.data.potential:EmpiricalPotential",
          "gulp.symmetry": "aiida_gulp.data.symmetry:SymmetryData"
        },
        "aiida.parsers": {
          "gulp.fitting": "aiida_gulp.parsers.parse_fitting:GulpFittingParser",
          "gulp.optimize": "aiida_gulp.parsers.parse_opt:GulpOptParser",
          "gulp.single": "aiida_gulp.parsers.parse_single:GulpSingleParser"
        },
        "aiida.workflows": {},
        "console_scripts": {
          "gulp_mock": "aiida_gulp.tests.mock_gulp:main"
        },
        "gulp.potentials": {
          "lj": "aiida_gulp.potentials.lj:PotentialWriterLJ",
          "reaxff": "aiida_gulp.potentials.reaxff:PotentialWriterReaxff"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-gulp<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 3
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 3
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 2
        },
        {
          "colorclass": "purple",
          "text": "Console scripts",
          "count": 1
        },
        {
          "colorclass": "orange",
          "text": "Other (Data commands, Gulp potentials)",
          "count": 3
        }
      ],
      "pip_install_cmd": "pip install --pre aiida-gulp",
      "is_installable": "False"
    },
    "aiida-icon": {
      "entry_point_prefix": "icon",
      "pip_url": "aiida-icon",
      "documentation_url": "https://aiida-icon.github.io/aiida-icon/",
      "code_home": "https://github.com/aiida-icon/aiida-icon",
      "plugin_info": "https://raw.githubusercontent.com/aiida-icon/aiida-icon/main/pyproject.toml",
      "name": "aiida-icon",
      "package_name": "aiida_icon",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2024-11-11",
        "description": "AiiDA Plugin to run simulations with the ICON weather & climate model",
        "author_email": "Rico H\u00e4uselmann <rico.haeuselmann@gmail.com>",
        "classifiers": [
          "Development Status :: 4 - Beta",
          "Framework :: AiiDA",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.13",
          "Programming Language :: Python :: Implementation :: CPython"
        ],
        "version": "0.4.0"
      },
      "aiida_version": ">=2.5",
      "entry_points": {
        "aiida.calculations": {
          "icon.icon": "aiida_icon.calculations:IconCalculation"
        },
        "aiida.parsers": {
          "icon.icon": "aiida_icon.calculations:IconParser"
        }
      },
      "commits_count": 23,
      "development_status": "beta",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-icon<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-icon",
      "is_installable": "False"
    },
    "aiida-inq": {
      "entry_point_prefix": "inq",
      "plugin_info": "https://github.com/LLNL/aiida-inq/blob/main/pyproject.toml",
      "code_home": "https://github.com/LLNL/aiida-inq",
      "pip_url": "aiida-inq",
      "name": "aiida-inq",
      "package_name": "aiida_inq",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2024-10-08",
        "description": "The official AiiDA plugin for INQ.",
        "author_email": "Nathan Keilbart <keilbart1@llnl.gov>",
        "classifiers": [
          "Development Status :: 4 - Beta",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Topic :: Scientific/Engineering"
        ],
        "version": "0.1.0"
      },
      "aiida_version": ">=2.0,<3.0",
      "entry_points": {
        "aiida.calculations": {
          "inq.create_kpoints_from_distance": "aiida_inq.calculations.functions.create_kpoints_from_distance:create_kpoints_from_distance",
          "inq.inq": "aiida_inq.calculations.inq:InqCalculation"
        },
        "aiida.parsers": {
          "inq.inq": "aiida_inq.parsers.inq:InqParser"
        },
        "aiida.workflows": {
          "inq.base": "aiida_inq.workflows.base:InqBaseWorkChain",
          "inq.convergence": "aiida_inq.workflows.convergence:InqConvergenceWorkChain",
          "inq.tddft": "aiida_inq.workflows.tddft:InqTDDFTWorkChain"
        }
      },
      "commits_count": 77,
      "development_status": "beta",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-inq<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 2
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 3
        }
      ],
      "pip_install_cmd": "pip install aiida-inq",
      "is_installable": "False"
    },
    "aiida-kkr": {
      "code_home": "https://github.com/JuDFTteam/aiida-kkr/tree/develop",
      "development_status": "stable",
      "documentation_url": "https://aiida-kkr.readthedocs.io/",
      "entry_point_prefix": "kkr",
      "pip_url": "aiida-kkr",
      "plugin_info": "https://raw.githubusercontent.com/JuDFTteam/aiida-kkr/master/pyproject.toml",
      "name": "aiida-kkr",
      "package_name": "aiida_kkr",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2024-12-05",
        "description": "AiiDA plugin for the JuKKR codes",
        "author_email": "Philipp Ruessmann <p.ruessmann@fz-juelich.de>, Jens Broeder <j.broeder@fz-juelich.de>, Fabian Bertoldo <f.bertoldo@fz-juelich.de>",
        "classifiers": [
          "Development Status :: 4 - Beta",
          "Environment :: Plugins",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Topic :: Scientific/Engineering :: Physics"
        ],
        "version": "2.3.1"
      },
      "aiida_version": ">=2.0.0,<3.0.0",
      "entry_points": {
        "aiida.calculations": {
          "kkr.kkr": "aiida_kkr.calculations.kkr:KkrCalculation",
          "kkr.kkrimp": "aiida_kkr.calculations.kkrimp:KkrimpCalculation",
          "kkr.kkrimporter": "aiida_kkr.calculations.kkrimporter:KkrImporterCalculation",
          "kkr.kkrnano": "aiida_kkr.calculations.kkrnano:KKRnanoCalculation",
          "kkr.voro": "aiida_kkr.calculations.voro:VoronoiCalculation"
        },
        "aiida.data": {
          "kkr.strucwithpot": "aiida_kkr.data.strucwithpot:StrucWithPotData"
        },
        "aiida.parsers": {
          "kkr.kkrimporterparser": "aiida_kkr.parsers.kkrimporter:KkrImporterParser",
          "kkr.kkrimpparser": "aiida_kkr.parsers.kkrimp:KkrimpParser",
          "kkr.kkrnanoparser": "aiida_kkr.parsers.kkrnano:KKRnanoParser",
          "kkr.kkrparser": "aiida_kkr.parsers.kkr:KkrParser",
          "kkr.voroparser": "aiida_kkr.parsers.voro:VoronoiParser"
        },
        "aiida.workflows": {
          "kkr.STM": "aiida_kkr.workflows.kkr_STM:kkr_STM_wc",
          "kkr.bs": "aiida_kkr.workflows.bs:kkr_bs_wc",
          "kkr.combine_imp": "aiida_kkr.workflows._combine_imps:combine_imps_wc",
          "kkr.decimation": "aiida_kkr.workflows._decimation:kkr_decimation_wc",
          "kkr.dos": "aiida_kkr.workflows.dos:kkr_dos_wc",
          "kkr.eos": "aiida_kkr.workflows.eos:kkr_eos_wc",
          "kkr.gf_writeout": "aiida_kkr.workflows.gf_writeout:kkr_flex_wc",
          "kkr.imp": "aiida_kkr.workflows.kkr_imp:kkr_imp_wc",
          "kkr.imp_BdG": "aiida_kkr.workflows.imp_BdG:kkrimp_BdG_wc",
          "kkr.imp_dos": "aiida_kkr.workflows.kkr_imp_dos:kkr_imp_dos_wc",
          "kkr.imp_sub": "aiida_kkr.workflows.kkr_imp_sub:kkr_imp_sub_wc",
          "kkr.jij": "aiida_kkr.workflows.jijs:kkr_jij_wc",
          "kkr.scf": "aiida_kkr.workflows.kkr_scf:kkr_scf_wc",
          "kkr.startpot": "aiida_kkr.workflows.voro_start:kkr_startpot_wc"
        },
        "console_scripts": {
          "aiida-kkr": "aiida_kkr.cmdline:cmd_root"
        }
      },
      "commits_count": 142,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-kkr<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W005'>W005</a>: Development status in classifiers (beta) does not match development_status in metadata (stable)",
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 5
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 5
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 14
        },
        {
          "colorclass": "purple",
          "text": "Console scripts",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-kkr",
      "is_installable": "False"
    },
    "aiida-lammps": {
      "code_home": "https://github.com/aiidaplugins/aiida-lammps",
      "development_status": "beta",
      "entry_point_prefix": "lammps",
      "pip_url": "git+https://github.com/aiidaplugins/aiida-lammps",
      "name": "aiida-lammps",
      "package_name": "aiida_lammps",
      "hosted_on": "github.com",
      "metadata": {
        "classifiers": [
          "Development Status :: 4 - Beta",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Topic :: Scientific/Engineering :: Chemistry",
          "Topic :: Scientific/Engineering :: Physics",
          "Framework :: AiiDA"
        ],
        "author": "Chris Sewell",
        "author_email": "chrisj_sewell@hotmail.com"
      },
      "aiida_version": "~=2.3",
      "entry_points": {
        "aiida.calculations": {
          "lammps.base": "aiida_lammps.calculations.base:LammpsBaseCalculation",
          "lammps.raw": "aiida_lammps.calculations.raw:LammpsRawCalculation"
        },
        "aiida.parsers": {
          "lammps.base": "aiida_lammps.parsers.base:LammpsBaseParser",
          "lammps.raw": "aiida_lammps.parsers.raw:LammpsRawParser"
        },
        "aiida.data": {
          "lammps.potential": "aiida_lammps.data.potential:LammpsPotentialData",
          "lammps.trajectory": "aiida_lammps.data.trajectory:LammpsTrajectory"
        },
        "aiida.workflows": {
          "lammps.base": "aiida_lammps.workflows.base:LammpsBaseWorkChain",
          "lammps.relax": "aiida_lammps.workflows.relax:LammpsRelaxWorkChain",
          "lammps.md": "aiida_lammps.workflows.molecular_dynamics:LammpsMDWorkChain"
        }
      },
      "commits_count": 51,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-lammps<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 2
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 2
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 2
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 3
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/aiidaplugins/aiida-lammps",
      "is_installable": "False"
    },
    "aiida-lsmo": {
      "code_home": "https://github.com/lsmo-epfl/aiida-lsmo",
      "development_status": "stable",
      "entry_point_prefix": "lsmo",
      "pip_url": "git+https://github.com/lsmo-epfl/aiida-lsmo",
      "name": "aiida-lsmo",
      "package_name": "aiida_lsmo",
      "hosted_on": "github.com",
      "metadata": {
        "author": "Aliaksandr Yakutovich, Daniele Ongari, Leopold Talirz",
        "author_email": "aliaksandr.yakutovich@epfl.ch",
        "version": "1.0.0",
        "description": "AiiDA workflows for the LSMO laboratory at EPFL",
        "classifiers": [
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7"
        ]
      },
      "aiida_version": ">=1.0.0",
      "entry_points": {
        "aiida.calculations": {
          "lsmo.ff_builder": "aiida_lsmo.calcfunctions:ff_builder",
          "lsmo.calc_ch4_working_cap": "aiida_lsmo.calcfunctions:calc_ch4_working_cap",
          "lsmo.calc_h2_working_cap": "aiida_lsmo.calcfunctions:calc_h2_working_cap",
          "lsmo.calc_o2_working_cap": "aiida_lsmo.calcfunctions:calc_o2_working_cap",
          "lsmo.calc_selectivity": "aiida_lsmo.calcfunctions:calc_selectivity"
        },
        "aiida.parsers": {
          "lsmo.cp2k_bsse_parser": "aiida_lsmo.parsers:Cp2kBsseParser",
          "lsmo.cp2k_advanced_parser": "aiida_lsmo.parsers:Cp2kAdvancedParser"
        },
        "aiida.workflows": {
          "lsmo.binding_site": "aiida_lsmo.workchains:BindingSiteWorkChain",
          "lsmo.cp2k_binding_energy": "aiida_lsmo.workchains.cp2k_binding_energy:Cp2kBindingEnergyWorkChain",
          "lsmo.cp2k_multistage": "aiida_lsmo.workchains:Cp2kMultistageWorkChain",
          "lsmo.cp2k_multistage_ddec": "aiida_lsmo.workchains:Cp2kMultistageDdecWorkChain",
          "lsmo.isotherm": "aiida_lsmo.workchains:IsothermWorkChain",
          "lsmo.isotherm_multi_temp": "aiida_lsmo.workchains:IsothermMultiTempWorkChain",
          "lsmo.isotherm_calc_pe": "aiida_lsmo.workchains:IsothermCalcPEWorkChain",
          "lsmo.zeopp_multistage_ddec": "aiida_lsmo.workchains:ZeoppMultistageDdecWorkChain",
          "lsmo.sim_annealing": "aiida_lsmo.workchains.sim_annealing:SimAnnealingWorkChain",
          "lsmo.nanoporous_screening_1": "aiida_lsmo.workchains:NanoporousScreening1WorkChain"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-lsmo<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W003'>W003</a>: Missing classifier 'Framework :: AiiDA'",
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 5
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 2
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 10
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/lsmo-epfl/aiida-lsmo",
      "is_installable": "False"
    },
    "aiida-metavo-scheduler": {
      "code_home": "https://github.com/pzarabadip/aiida-metavo-scheduler",
      "development_status": "stable",
      "entry_point_prefix": "metavo_scheduler",
      "pip_url": "git+https://github.com/pzarabadip/aiida-metavo-scheduler",
      "name": "aiida-metavo-scheduler",
      "package_name": "aiida_metavo_scheduler",
      "hosted_on": "github.com",
      "metadata": {
        "author": "Pezhman Zarabadi-Poor",
        "author_email": "pzarabadip@gmail.com",
        "version": "1.0.0",
        "description": "",
        "classifiers": [
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Topic :: Scientific/Engineering"
        ]
      },
      "aiida_version": ">=1.0.0,<1.6",
      "entry_points": {
        "aiida.cmdline.computer.configure": {
          "sshmetavo": "aiida_metavo_scheduler.metavo.ssh_metavo:CONFIGURE_SSH_CMD"
        },
        "aiida.schedulers": {
          "pbsprometavo": "aiida_metavo_scheduler.metavo.pbspro_metavo:PbsproSchedulerMetaVO"
        },
        "aiida.transports": {
          "sshmetavo": "aiida_metavo_scheduler.metavo.ssh_metavo:SshTransport"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-metavo-scheduler<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead.",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'sshmetavo' does not start with prefix 'metavo_scheduler.'",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'pbsprometavo' does not start with prefix 'metavo_scheduler.'",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'sshmetavo' does not start with prefix 'metavo_scheduler.'"
      ],
      "summaryinfo": [
        {
          "colorclass": "orange",
          "text": "Other (Cmdline computer configure, Schedulers, Transports)",
          "count": 3
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/pzarabadip/aiida-metavo-scheduler",
      "is_installable": "False"
    },
    "aiida-mlip": {
      "entry_point_prefix": "mlip",
      "plugin_info": "https://raw.githubusercontent.com/stfc/aiida-mlip/main/pyproject.toml",
      "code_home": "https://github.com/stfc/aiida-mlip",
      "documentation_url": "https://stfc.github.io/aiida-mlip/",
      "pip_url": "aiida-mlip",
      "name": "aiida-mlip",
      "package_name": "aiida_mlip",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2024-06-10",
        "description": "machine learning interatomic potentials aiida plugin",
        "author": "Federica Zanca",
        "author_email": "federica.zanca@stfc.ac.uk",
        "home_page": "https://github.com/stfc/aiida-mlip/",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: BSD License",
          "Natural Language :: English",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.9"
        ],
        "version": "0.2.1"
      },
      "aiida_version": ">=2.5,<3.0",
      "entry_points": {
        "aiida.calculations": {
          "mlip.md": "aiida_mlip.calculations.md:MD",
          "mlip.opt": "aiida_mlip.calculations.geomopt:GeomOpt",
          "mlip.sp": "aiida_mlip.calculations.singlepoint:Singlepoint",
          "mlip.train": "aiida_mlip.calculations.train:Train"
        },
        "aiida.data": {
          "mlip.config": "aiida_mlip.data.config:JanusConfigfile",
          "mlip.modeldata": "aiida_mlip.data.model:ModelData"
        },
        "aiida.parsers": {
          "mlip.md_parser": "aiida_mlip.parsers.md_parser:MDParser",
          "mlip.opt_parser": "aiida_mlip.parsers.opt_parser:GeomOptParser",
          "mlip.sp_parser": "aiida_mlip.parsers.sp_parser:SPParser",
          "mlip.train_parser": "aiida_mlip.parsers.train_parser:TrainParser"
        }
      },
      "commits_count": 31,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-mlip<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 4
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 4
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 2
        }
      ],
      "pip_install_cmd": "pip install aiida-mlip",
      "is_installable": "False"
    },
    "aiida-mpds": {
      "code_home": "https://github.com/mpds-io/mpds-aiida",
      "development_status": "beta",
      "documentation_url": "https://github.com/mpds-io/mpds-aiida",
      "entry_point_prefix": "mpds",
      "pip_url": "git+https://github.com/mpds-io/mpds-aiida",
      "name": "aiida-mpds",
      "package_name": "aiida_mpds",
      "hosted_on": "github.com",
      "metadata": {
        "author": "Andrey Sobolev",
        "author_email": "as@tilde.pro",
        "version": "",
        "description": "Aiida workflows for MPDS based on CRYSTAL",
        "classifiers": [
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.5",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Topic :: Scientific/Engineering",
          "Topic :: Scientific/Engineering :: Chemistry",
          "Topic :: Scientific/Engineering :: Physics",
          "Topic :: Scientific/Engineering :: Information Analysis",
          "Framework :: AiiDA"
        ]
      },
      "aiida_version": ">=1.0.1",
      "entry_points": {
        "aiida.workflows": {
          "crystal.mpds": "mpds_aiida.workflows.mpds:MPDSStructureWorkchain",
          "crystal.cif": "mpds_aiida.workflows.cif:CIFStructureWorkchain",
          "crystal.aiida": "mpds_aiida.workflows.aiida:AiidaStructureWorkchain"
        }
      },
      "commits_count": 6,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-mpds<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead.",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'crystal.mpds' does not start with prefix 'mpds.'",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'crystal.cif' does not start with prefix 'mpds.'",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'crystal.aiida' does not start with prefix 'mpds.'"
      ],
      "summaryinfo": [
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 3
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/mpds-io/mpds-aiida",
      "is_installable": "False"
    },
    "aiida-muon": {
      "entry_point_prefix": "muon",
      "code_home": "https://github.com/positivemuon/aiida-muon",
      "version_file": "https://raw.githubusercontent.com/positivemuon/aiida-muon/main/aiida_muon/__init__.py",
      "pip_url": "git+https://github.com/positivemuon/aiida-muon",
      "name": "aiida-muon",
      "package_name": "aiida_muon",
      "hosted_on": "github.com",
      "metadata": {
        "description": "aiida-muon is allows to find candiate muon implantation sites and hyperfine field by DFT supercell relaxations and from further symmetry and kinetics analysis.  ",
        "classifiers": [
          "Programming Language :: Python",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: Free To Use But Restricted",
          "Natural Language :: English",
          "Development Status :: 5 - Production/Stable",
          "Framework :: AiiDA"
        ],
        "author": "Muon group Parma"
      },
      "aiida_version": ">=2.0,<3",
      "entry_points": {
        "aiida.workflows": {
          "muon.find_muon": "aiida_muon.workflows.find_muon:FindMuonWorkChain"
        }
      },
      "commits_count": 78,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-muon<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/positivemuon/aiida-muon",
      "is_installable": "False"
    },
    "aiida-musconv": {
      "entry_point_prefix": "musconv",
      "code_home": "https://github.com/positivemuon/aiida-musconv",
      "version_file": "raw.githubusercontent.com/positivemuon/aiida-musconv/main/aiida_musconv/__init__.py",
      "pip_url": "git+https://github.com/positivemuon/aiida-musconv",
      "name": "aiida-musconv",
      "package_name": "aiida_musconv",
      "hosted_on": "github.com",
      "metadata": {
        "description": "aiida-impuritysupercellconv is a plugin that allows to obtain converged supercell size for an interstitial impurity calculation.",
        "classifiers": [
          "Programming Language :: Python",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: Free To Use But Restricted",
          "Natural Language :: English",
          "Development Status :: 5 - Production/Stable",
          "Framework :: AiiDA"
        ],
        "author": "Muon group Parma"
      },
      "aiida_version": ">=2.0,<3",
      "entry_points": {
        "aiida.workflows": {
          "impuritysupercellconv": "aiida_impuritysupercellconv.workflows.impuritysupercellconv:IsolatedImpurityWorkChain"
        }
      },
      "commits_count": 48,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-musconv<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'impuritysupercellconv' does not start with prefix 'musconv.'"
      ],
      "summaryinfo": [
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/positivemuon/aiida-musconv",
      "is_installable": "False"
    },
    "aiida-nanotech-empa": {
      "code_home": "https://github.com/nanotech-empa/aiida-nanotech-empa",
      "development_status": "beta",
      "entry_point_prefix": "nanotech_empa",
      "pip_url": "git+https://github.com/nanotech-empa/aiida-nanotech-empa",
      "name": "aiida-nanotech-empa",
      "package_name": "aiida_nanotech_empa",
      "hosted_on": "github.com",
      "metadata": {
        "description": "AiiDA plugins and workflows developed at nanotech@surfaces group from Empa.",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Topic :: Scientific/Engineering"
        ],
        "author": "nanotech@surfaces"
      },
      "aiida_version": ">=2.6,<3.0.0",
      "entry_points": {
        "aiida.parsers": {
          "nanotech_empa.pp": "aiida_nanotech_empa.parsers:PpParser",
          "nanotech_empa.cp2k_gw_parser": "aiida_nanotech_empa.parsers:Cp2kGwParser",
          "nanotech_empa.cp2k_neb_parser": "aiida_nanotech_empa.parsers:Cp2kNebParser",
          "nanotech_empa.gaussian.cubegen_pymol": "aiida_nanotech_empa.parsers.cubegen_pymol_parser:CubegenPymolParser",
          "nanotech_empa.gaussian.casscf": "aiida_nanotech_empa.parsers:GaussianCasscfParser"
        },
        "aiida.calculations": {
          "nanotech_empa.stm": "aiida_nanotech_empa.plugins:StmCalculation",
          "nanotech_empa.overlap": "aiida_nanotech_empa.plugins:OverlapCalculation",
          "nanotech_empa.afm": "aiida_nanotech_empa.plugins:AfmCalculation",
          "nanotech_empa.hrstm": "aiida_nanotech_empa.plugins:HrstmCalculation",
          "nanotech_empa.cubehandler": "aiida_nanotech_empa.plugins:CubeHandlerCalculation"
        },
        "aiida.workflows": {
          "nanotech_empa.nanoribbon": "aiida_nanotech_empa.workflows.qe:NanoribbonWorkChain",
          "nanotech_empa.gaussian.scf": "aiida_nanotech_empa.workflows.gaussian:GaussianScfWorkChain",
          "nanotech_empa.gaussian.relax": "aiida_nanotech_empa.workflows.gaussian:GaussianRelaxWorkChain",
          "nanotech_empa.gaussian.delta_scf": "aiida_nanotech_empa.workflows.gaussian:GaussianDeltaScfWorkChain",
          "nanotech_empa.gaussian.natorb": "aiida_nanotech_empa.workflows.gaussian:GaussianNatOrbWorkChain",
          "nanotech_empa.gaussian.spin": "aiida_nanotech_empa.workflows.gaussian:GaussianSpinWorkChain",
          "nanotech_empa.gaussian.hf_mp2": "aiida_nanotech_empa.workflows.gaussian:GaussianHfMp2WorkChain",
          "nanotech_empa.gaussian.constr_opt_chain": "aiida_nanotech_empa.workflows.gaussian:GaussianConstrOptChainWorkChain",
          "nanotech_empa.gaussian.casscf": "aiida_nanotech_empa.workflows.gaussian:GaussianCasscfWorkChain",
          "nanotech_empa.gaussian.casscf_series": "aiida_nanotech_empa.workflows.gaussian:GaussianCasscfSeriesWorkChain",
          "nanotech_empa.gaussian.nics": "aiida_nanotech_empa.workflows.gaussian:GaussianNicsWorkChain",
          "nanotech_empa.cp2k.geo_opt": "aiida_nanotech_empa.workflows.cp2k:Cp2kGeoOptWorkChain",
          "nanotech_empa.cp2k.fragment_separation": "aiida_nanotech_empa.workflows.cp2k:Cp2kFragmentSeparationWorkChain",
          "nanotech_empa.cp2k.ads_gw_ic": "aiida_nanotech_empa.workflows.cp2k:Cp2kAdsorbedGwIcWorkChain",
          "nanotech_empa.cp2k.molecule_gw": "aiida_nanotech_empa.workflows.cp2k:Cp2kMoleculeGwWorkChain",
          "nanotech_empa.cp2k.mol_opt_gw": "aiida_nanotech_empa.workflows.cp2k:Cp2kMoleculeOptGwWorkChain",
          "nanotech_empa.cp2k.pdos": "aiida_nanotech_empa.workflows.cp2k:Cp2kPdosWorkChain",
          "nanotech_empa.cp2k.orbitals": "aiida_nanotech_empa.workflows.cp2k:Cp2kOrbitalsWorkChain",
          "nanotech_empa.cp2k.stm": "aiida_nanotech_empa.workflows.cp2k:Cp2kStmWorkChain",
          "nanotech_empa.cp2k.afm": "aiida_nanotech_empa.workflows.cp2k:Cp2kAfmWorkChain",
          "nanotech_empa.cp2k.hrstm": "aiida_nanotech_empa.workflows.cp2k:Cp2kHrstmWorkChain",
          "nanotech_empa.cp2k.diag": "aiida_nanotech_empa.workflows.cp2k:Cp2kDiagWorkChain",
          "nanotech_empa.cp2k.replica": "aiida_nanotech_empa.workflows.cp2k:Cp2kReplicaWorkChain",
          "nanotech_empa.cp2k.neb": "aiida_nanotech_empa.workflows.cp2k:Cp2kNebWorkChain",
          "nanotech_empa.cp2k.phonons": "aiida_nanotech_empa.workflows.cp2k:Cp2kPhononsWorkChain",
          "nanotech_empa.cp2k.reftraj": "aiida_nanotech_empa.workflows.cp2k:Cp2kRefTrajWorkChain"
        },
        "aiida.schedulers": {
          "slurm_ethz_euler": "aiida_nanotech_empa.schedulers:ETHZEulerSlurmScheduler"
        }
      },
      "commits_count": 20,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-nanotech-empa<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W005'>W005</a>: Development status in classifiers (stable) does not match development_status in metadata (beta)",
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead.",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'slurm_ethz_euler' does not start with prefix 'nanotech_empa.'"
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 5
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 5
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 26
        },
        {
          "colorclass": "orange",
          "text": "Other (Schedulers)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/nanotech-empa/aiida-nanotech-empa",
      "is_installable": "False"
    },
    "aiida-nims-scheduler": {
      "code_home": "https://github.com/atztogo/aiida-nims-scheduler",
      "development_status": "stable",
      "documentation_url": "https://github.com/atztogo/aiida-nims-scheduler",
      "entry_point_prefix": "nims_scheduler",
      "pip_url": "git+https://github.com/atztogo/aiida-nims-scheduler",
      "name": "aiida-nims-scheduler",
      "package_name": "aiida_nims_scheduler",
      "hosted_on": "github.com",
      "metadata": {
        "description": "NIMS supercomputer scheduler",
        "classifiers": [
          "Programming Language :: Python",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Development Status :: 3 - Alpha",
          "Framework :: AiiDA"
        ],
        "author": "Atsushi Togo"
      },
      "aiida_version": ">=2.0,<3",
      "entry_points": {
        "aiida.schedulers": {
          "nims_scheduler": "aiida_nims_scheduler.schedulers.pbs_nims:PbsNimsScheduler"
        }
      },
      "commits_count": 29,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-nims-scheduler<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W005'>W005</a>: Development status in classifiers (alpha) does not match development_status in metadata (stable)",
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "orange",
          "text": "Other (Schedulers)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/atztogo/aiida-nims-scheduler",
      "is_installable": "False"
    },
    "aiida-nwchem": {
      "code_home": "https://github.com/aiidateam/aiida-nwchem",
      "documentation_url": "https://aiida-nwchem.readthedocs.io/",
      "entry_point_prefix": "nwchem",
      "pip_url": "aiida-nwchem",
      "plugin_info": "https://raw.githubusercontent.com/aiidateam/aiida-nwchem/master/setup.json",
      "name": "aiida-nwchem",
      "package_name": "aiida_nwchem",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2023-08-22",
        "description": "The official AiiDA plugin for NWChem",
        "author_email": "The AiiDA team <developers@aiida.net>",
        "classifiers": [
          "Development Status :: 4 - Beta",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Topic :: Scientific/Engineering"
        ],
        "version": "3.0.1"
      },
      "aiida_version": ">=2.0,<3.0",
      "entry_points": {
        "aiida.calculations": {
          "nwchem.base": "aiida_nwchem.calculations.nwchem:NwchemBaseCalculation",
          "nwchem.nwchem": "aiida_nwchem.calculations.nwchem:NwchemCalculation"
        },
        "aiida.parsers": {
          "nwchem.nwchem": "aiida_nwchem.parsers.nwchem:NwchemBaseParser"
        },
        "aiida.workflows": {
          "nwchem.base": "aiida_nwchem.workflows.base:NwchemBaseWorkChain"
        }
      },
      "commits_count": 0,
      "development_status": "beta",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-nwchem<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 2
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-nwchem",
      "is_installable": "False"
    },
    "aiida-open_circuit_voltage": {
      "entry_point_prefix": "quantumespresso.ocv",
      "code_home": "https://github.com/tsthakur/aiida-open_circuit_voltage",
      "name": "aiida-open_circuit_voltage",
      "package_name": "aiida_open_circuit_voltage",
      "hosted_on": "github.com",
      "metadata": {
        "author": "Tushar Thakur",
        "author_email": "tushar.thakur@epfl.ch",
        "version": "0.2.0",
        "description": "The AiiDA plugin to calculate ocv at various charge of states using QE",
        "classifiers": [
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python",
          "Development Status :: 4 - Beta",
          "Natural Language :: English",
          "Intended Audience :: Science/Research"
        ]
      },
      "aiida_version": ">=1.1.0",
      "entry_points": {
        "aiida.workflows": {
          "quantumespresso.ocv.ocvwc": "aiida_open_circuit_voltage.workflows.workchain:OCVWorkChain"
        }
      },
      "commits_count": 6,
      "development_status": "beta",
      "errors": [],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W009'>W009</a>: Prefix 'quantumespresso.ocv' does not follow naming convention."
      ],
      "summaryinfo": [
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        }
      ],
      "pip_install_cmd": "Missing, see source code repository"
    },
    "aiida-optimize": {
      "code_home": "https://github.com/greschd/aiida-optimize",
      "documentation_url": "https://aiida-optimize.readthedocs.io",
      "entry_point_prefix": "optimize",
      "pip_url": "aiida-optimize",
      "plugin_info": "https://raw.githubusercontent.com/greschd/aiida-optimize/master/setup.json",
      "name": "aiida-optimize",
      "package_name": "aiida_optimize",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2023-03-30",
        "description": "AiiDA Plugin for running optimization algorithms.",
        "author": "Dominik Gresch",
        "author_email": "greschd@gmx.ch",
        "license": "Apache 2.0",
        "home_page": "https://aiida-optimize.readthedocs.io/",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Plugins",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Topic :: Scientific/Engineering :: Physics"
        ],
        "version": "1.0.2"
      },
      "aiida_version": ">=2.0.0,<3.0.0",
      "entry_points": {
        "aiida.workflows": {
          "optimize.optimize": "aiida_optimize._optimization_workchain:OptimizationWorkChain",
          "optimize.wrappers.add_inputs": "aiida_optimize.wrappers._add_inputs:AddInputsWorkChain",
          "optimize.wrappers.concatenate": "aiida_optimize.wrappers._concatenate:ConcatenateWorkChain",
          "optimize.wrappers.create_evaluate": "aiida_optimize.wrappers._create_evaluate:CreateEvaluateWorkChain"
        }
      },
      "commits_count": 0,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-optimize<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 4
        }
      ],
      "pip_install_cmd": "pip install aiida-optimize",
      "is_installable": "False"
    },
    "aiida-orca": {
      "code_home": "https://github.com/pzarabadip/aiida-orca",
      "development_status": "stable",
      "documentation_url": "https://aiida-orca.readthedocs.io/",
      "entry_point_prefix": "orca",
      "pip_url": "git+https://github.com/pzarabadip/aiida-orca",
      "name": "aiida-orca",
      "package_name": "aiida_orca",
      "hosted_on": "github.com",
      "metadata": {
        "author": "Pezhman Zarabadi-Poor",
        "author_email": "pzarabadip@gmail.com",
        "version": "0.5.1",
        "description": "AiiDA plugin for ORCA code",
        "classifiers": [
          "Environment :: Plugins",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Framework :: AiiDA"
        ]
      },
      "aiida_version": ">=1.0.0,<2.0.0",
      "entry_points": {
        "aiida.calculations": {
          "orca_main": "aiida_orca.calculations:OrcaCalculation",
          "orca_asa": "aiida_orca.calculations:OrcaAsaCalculation"
        },
        "aiida.parsers": {
          "orca_base_parser": "aiida_orca.parsers:OrcaBaseParser"
        },
        "aiida.workflows": {
          "orca.base": "aiida_orca.workchains:OrcaBaseWorkChain"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-orca<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 2
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/pzarabadip/aiida-orca",
      "is_installable": "False"
    },
    "aiida-phonopy": {
      "code_home": "https://github.com/aiida-phonopy/aiida-phonopy",
      "documentation_url": "https://aiida-phonopy.readthedocs.io/",
      "entry_point_prefix": "phonopy",
      "pip_url": "aiida-phonopy",
      "plugin_info": "https://raw.githubusercontent.com/aiida-phonopy/aiida-phonopy/master/setup.json",
      "name": "aiida-phonopy",
      "package_name": "aiida_phonopy",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2025-01-27",
        "description": "The official AiiDA plugin for Phonopy",
        "author_email": "Lorenzo Bastonero <bastonero.lorenzo@gmail.com>",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.9",
          "Topic :: Scientific/Engineering :: Chemistry",
          "Topic :: Scientific/Engineering :: Physics"
        ],
        "version": "1.2.0"
      },
      "aiida_version": ">=2.0.0,<3.0.0",
      "entry_points": {
        "aiida.calculations": {
          "phonopy.phonopy": "aiida_phonopy.calculations.phonopy:PhonopyCalculation"
        },
        "aiida.data": {
          "phonopy.force_constants": "aiida_phonopy.data.force_constants:ForceConstantsData",
          "phonopy.phonopy": "aiida_phonopy.data.phonopy:PhonopyData",
          "phonopy.preprocess": "aiida_phonopy.data.preprocess:PreProcessData",
          "phonopy.raw": "aiida_phonopy.data.raw:RawData"
        },
        "aiida.parsers": {
          "phonopy.phonopy": "aiida_phonopy.parsers.phonopy:PhonopyParser"
        },
        "aiida.workflows": {
          "phonopy.ase": "aiida_phonopy.workflows.ase:PhonopyAseWorkChain",
          "phonopy.phonopy": "aiida_phonopy.workflows.phonopy:PhonopyWorkChain"
        }
      },
      "commits_count": 6,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-phonopy<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 4
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 2
        }
      ],
      "pip_install_cmd": "pip install aiida-phonopy",
      "is_installable": "False"
    },
    "aiida-phtools": {
      "code_home": "https://github.com/ltalirz/aiida-phtools",
      "entry_point_prefix": "phtools",
      "pip_url": "aiida-phtools",
      "plugin_info": "https://raw.github.com/ltalirz/aiida-phtools/master/setup.json",
      "name": "aiida-phtools",
      "package_name": "aiida_phtools",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2018-06-21",
        "description": "AiiDA plugin for persistence homology tools, used to analyze nanoporous materials.",
        "author": "Leopold Talirz",
        "author_email": "leopold.talirz@gmail.com",
        "license": "MIT",
        "home_page": "https://github.com/ltalirz/aiida-phtools",
        "classifiers": [
          "Programming Language :: Python"
        ],
        "version": "0.1.0a1"
      },
      "aiida_version": "*",
      "entry_points": {
        "aiida.calculations": {
          "phtools.dmatrix": "aiida_phtools.calculations.distance_matrix:DistanceMatrixCalculation",
          "phtools.surface": "aiida_phtools.calculations.pore_surface:PoreSurfaceCalculation"
        },
        "aiida.data": {
          "phtools.surface": "aiida_phtools.data.pore_surface:PoreSurfaceParameters"
        },
        "aiida.parsers": {
          "phtools.dmatrix": "aiida_phtools.parsers.distance_matrix:DistanceMatrixParser",
          "phtools.surface": "aiida_phtools.parsers.pore_surface:PoreSurfaceParser"
        }
      },
      "commits_count": 0,
      "development_status": "planning",
      "errors": [],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W003'>W003</a>: Missing classifier 'Framework :: AiiDA'"
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 2
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 2
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install --pre aiida-phtools"
    },
    "aiida-plumed": {
      "code_home": "https://github.com/ConradJohnston/aiida-plumed",
      "entry_point_prefix": "plumed",
      "pip_url": "aiida-plumed",
      "plugin_info": "https://raw.github.com/ConradJohnston/aiida-plumed/AiiDA-v1.0-compatibility/setup.json",
      "name": "aiida-plumed",
      "package_name": "aiida_plumed",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2019-09-16",
        "description": "AiiDA plugin providing support for Plumed2",
        "author": "Conrad Johnston",
        "author_email": "conrad.s.johnston@googlemail.com",
        "license": "MIT",
        "home_page": "https://github.com/ConradJohnston/aiida-plumed",
        "classifiers": [
          "Development Status :: 2 - Pre-Alpha",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Programming Language :: Python"
        ],
        "version": "0.1.0a0"
      },
      "aiida_version": ">=1.0.0b3,<2.0.0",
      "entry_points": {
        "aiida.calculations": {
          "plumed": "aiida_plumed.calculations:DiffCalculation"
        },
        "aiida.cmdline.data": {
          "plumed": "aiida_plumed.cli:data_cli"
        },
        "aiida.data": {
          "plumed": "aiida_plumed.data:DiffParameters"
        },
        "aiida.parsers": {
          "plumed": "aiida_plumed.parsers:DiffParser"
        }
      },
      "commits_count": 0,
      "development_status": "pre-alpha",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-plumed<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 1
        },
        {
          "colorclass": "orange",
          "text": "Other (Data commands)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install --pre aiida-plumed",
      "is_installable": "False"
    },
    "aiida-porousmaterials": {
      "code_home": "https://github.com/pzarabadip/aiida-porousmaterials",
      "development_status": "stable",
      "entry_point_prefix": "porousmaterials",
      "pip_url": "aiida-porousmaterials",
      "name": "aiida-porousmaterials",
      "package_name": "aiida_porousmaterials",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2020-03-05",
        "description": "AiiDA plugin for PorousMaterials code",
        "author": "Pezhman Zarabadi-Poor",
        "author_email": "pzarabadip@gmail.com",
        "license": "MIT",
        "home_page": "https://github.com/pzarabadip/aiida-porousmaterials",
        "classifiers": [
          "Environment :: Plugins",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8"
        ],
        "version": "1.0.0a3"
      },
      "aiida_version": null,
      "entry_points": {
        "aiida.calculations": {
          "porousmaterials": "aiida_porousmaterials.calculations:PorousMaterialsCalculation"
        },
        "aiida.parsers": {
          "porousmaterials": "aiida_porousmaterials.parser:PorousMaterialsParser"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-porousmaterials<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W019'>W019</a>: No <code>bdist_wheel</code> available for PyPI release.",
        "<a href='https://github.com/aiidateam/aiida-registry#W002'>W002</a>: AiiDA version not found",
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install --pre aiida-porousmaterials",
      "is_installable": "False"
    },
    "aiida-pseudo": {
      "code_home": "https://github.com/aiidateam/aiida-pseudo",
      "entry_point_prefix": "pseudo",
      "pip_url": "aiida-pseudo",
      "plugin_info": "https://raw.github.com/aiidateam/aiida-pseudo/master/setup.cfg",
      "name": "aiida-pseudo",
      "package_name": "aiida_pseudo",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2025-01-13",
        "description": "AiiDA plugin that simplifies working with pseudo potentials.",
        "author_email": "\"Sebastiaan P. Huber\" <mail@sphuber.net>",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.9"
        ],
        "version": "1.7.0"
      },
      "aiida_version": ">=2.6,<3.0",
      "entry_points": {
        "aiida.data": {
          "pseudo": "aiida_pseudo.data.pseudo.pseudo:PseudoPotentialData",
          "pseudo.jthxml": "aiida_pseudo.data.pseudo.jthxml:JthXmlData",
          "pseudo.psf": "aiida_pseudo.data.pseudo.psf:PsfData",
          "pseudo.psml": "aiida_pseudo.data.pseudo.psml:PsmlData",
          "pseudo.psp8": "aiida_pseudo.data.pseudo.psp8:Psp8Data",
          "pseudo.upf": "aiida_pseudo.data.pseudo.upf:UpfData",
          "pseudo.vps": "aiida_pseudo.data.pseudo.vps:VpsData"
        },
        "aiida.groups": {
          "pseudo.family": "aiida_pseudo.groups.family.pseudo:PseudoPotentialFamily",
          "pseudo.family.cutoffs": "aiida_pseudo.groups.family.cutoffs:CutoffsPseudoPotentialFamily",
          "pseudo.family.pseudo_dojo": "aiida_pseudo.groups.family.pseudo_dojo:PseudoDojoFamily",
          "pseudo.family.sssp": "aiida_pseudo.groups.family.sssp:SsspFamily"
        },
        "console_scripts": {
          "aiida-pseudo": "aiida_pseudo.cli:cmd_root"
        }
      },
      "commits_count": 12,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-pseudo<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "red",
          "text": "Data",
          "count": 7
        },
        {
          "colorclass": "purple",
          "text": "Console scripts",
          "count": 1
        },
        {
          "colorclass": "orange",
          "text": "Other (Groups)",
          "count": 4
        }
      ],
      "pip_install_cmd": "pip install aiida-pseudo",
      "is_installable": "False"
    },
    "aiida-psi4": {
      "code_home": "https://github.com/ltalirz/aiida-psi4/tree/master",
      "development_status": "beta",
      "entry_point_prefix": "psi4",
      "pip_url": "git+https://github.com/ltalirz/aiida-psi4",
      "name": "aiida-psi4",
      "package_name": "aiida_psi4",
      "hosted_on": "github.com",
      "metadata": {
        "author": "Leopold Talirz",
        "author_email": "leopold.talirz@gmail.com",
        "version": "0.1.0a0",
        "description": "AiiDA plugin for the Psi4 Quantum Chemistry package.",
        "classifiers": [
          "Programming Language :: Python",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Framework :: AiiDA"
        ]
      },
      "aiida_version": ">=1.6.4,<2.0.0",
      "entry_points": {
        "aiida.data": {
          "psi4.atomic_input": "aiida_psi4.data:AtomicInput"
        },
        "aiida.calculations": {
          "psi4": "aiida_psi4.calculations:Psi4Calculation"
        },
        "aiida.parsers": {
          "psi4": "aiida_psi4.parsers:QCSchemaParser"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-psi4<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/ltalirz/aiida-psi4",
      "is_installable": "False"
    },
    "aiida-pyscf": {
      "code_home": "https://github.com/microsoft/aiida-pyscf",
      "entry_point_prefix": "pyscf",
      "pip_url": "aiida-pyscf",
      "plugin_info": "https://raw.githubusercontent.com/microsoft/aiida-pyscf/main/pyproject.toml",
      "name": "aiida-pyscf",
      "package_name": "aiida_pyscf",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2024-01-03",
        "description": "AiiDA plugin for the Python-based Simulations of Chemistry Framework (PySCF).",
        "author_email": "\"Sebastiaan P. Huber\" <mail@sphuber.net>, Adam Grofe <v-adamgrofe@microsoft.com>",
        "classifiers": [
          "Development Status :: 3 - Alpha",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.9",
          "Topic :: Scientific/Engineering"
        ],
        "version": "0.5.1"
      },
      "aiida_version": ">=2.5,<3.0",
      "entry_points": {
        "aiida.calculations": {
          "pyscf.base": "aiida_pyscf.calculations.base:PyscfCalculation"
        },
        "aiida.parsers": {
          "pyscf.base": "aiida_pyscf.parsers.base:PyscfParser"
        },
        "aiida.workflows": {
          "pyscf.base": "aiida_pyscf.workflows.base:PyscfBaseWorkChain"
        }
      },
      "commits_count": 4,
      "development_status": "alpha",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-pyscf<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-pyscf",
      "is_installable": "False"
    },
    "aiida-python": {
      "entry_point_prefix": "aiida-python",
      "development_status": "beta",
      "code_home": "https://github.com/addman2/aiida-python",
      "pip_url": "aiida-python",
      "documentation_url": "https://aiida-python.readthedocs.io",
      "name": "aiida-python",
      "package_name": "aiida_python",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2023-11-03",
        "description": "AiiDA Python",
        "author": "Ot(t)o Kohul\u00e1k",
        "author_email": "otto.kohulak@dontemail.me",
        "license": "MIT",
        "home_page": "https://todo.nothing/",
        "classifiers": [
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Programming Language :: Python"
        ],
        "version": "0.0.6"
      },
      "aiida_version": ">=2.1.0",
      "entry_points": {
        "aiida.calculations": {
          "python.calc": "aiida_python.calc:CalcJobPython"
        },
        "aiida.parsers": {
          "python.parser": "aiida_python.parser:ParserPython"
        },
        "aiida_python.serializers": {
          "int": "aiida_python.serializers:SerializerInt",
          "float": "aiida_python.serializers:SerializerFloat",
          "str": "aiida_python.serializers:SerializerStr",
          "list": "aiida_python.serializers:SerializerList",
          "arraydata": "aiida_python.serializers:SerializerArrayData"
        },
        "aiida.data": {}
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-python<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W019'>W019</a>: No <code>bdist_wheel</code> available for PyPI release.",
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead.",
        "<a href='https://github.com/aiidateam/aiida-registry#W009'>W009</a>: Prefix 'aiida-python' does not follow naming convention.",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'python.calc' does not start with prefix 'aiida-python.'",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'python.parser' does not start with prefix 'aiida-python.'"
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "orange",
          "text": "Other (Aiida python serializers)",
          "count": 5
        }
      ],
      "pip_install_cmd": "pip install aiida-python",
      "is_installable": "False"
    },
    "aiida-pythonjob": {
      "code_home": "https://github.com/aiidateam/aiida-pythonjob",
      "entry_point_prefix": "pythonjob",
      "pip_url": "aiida-pythonjob",
      "plugin_info": "https://raw.github.com/aiidateam/aiida-pythonjob/master/pyproject.toml",
      "name": "aiida-pythonjob",
      "package_name": "aiida_pythonjob",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2025-02-11",
        "description": "Run Python functions on a remote computer.",
        "author_email": "Xing Wang <xingwang1991@gmail.com>",
        "license": "MIT License\n        \n        Copyright (c) 2024 AiiDA team\n        \n        Permission is hereby granted, free of charge, to any person obtaining a copy\n        of this software and associated documentation files (the \"Software\"), to deal\n        in the Software without restriction, including without limitation the rights\n        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n        copies of the Software, and to permit persons to whom the Software is\n        furnished to do so, subject to the following conditions:\n        \n        The above copyright notice and this permission notice shall be included in all\n        copies or substantial portions of the Software.\n        \n        THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n        SOFTWARE.",
        "classifiers": [
          "Development Status :: 3 - Alpha",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Programming Language :: Python"
        ],
        "version": "0.1.8"
      },
      "aiida_version": ">=2.3,<3",
      "entry_points": {
        "aiida.calculations": {
          "pythonjob.pythonjob": "aiida_pythonjob.calculations.pythonjob:PythonJob"
        },
        "aiida.data": {
          "pythonjob.ase.atoms.Atoms": "aiida_pythonjob.data.atoms:AtomsData",
          "pythonjob.builtins.bool": "aiida.orm.nodes.data.bool:Bool",
          "pythonjob.builtins.dict": "aiida.orm.nodes.data.dict:Dict",
          "pythonjob.builtins.float": "aiida.orm.nodes.data.float:Float",
          "pythonjob.builtins.int": "aiida.orm.nodes.data.int:Int",
          "pythonjob.builtins.list": "aiida.orm.nodes.data.list:List",
          "pythonjob.builtins.str": "aiida.orm.nodes.data.str:Str",
          "pythonjob.pickled_data": "aiida_pythonjob.data.pickled_data:PickledData"
        },
        "aiida.parsers": {
          "pythonjob.pythonjob": "aiida_pythonjob.parsers.pythonjob:PythonJobParser"
        }
      },
      "commits_count": 26,
      "development_status": "alpha",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-pythonjob<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 8
        }
      ],
      "pip_install_cmd": "pip install aiida-pythonjob",
      "is_installable": "False"
    },
    "aiida-qeq": {
      "code_home": "https://github.com/ltalirz/aiida-qeq",
      "development_status": "stable",
      "entry_point_prefix": "qeq",
      "pip_url": "aiida-qeq",
      "plugin_info": "https://raw.githubusercontent.com/ltalirz/aiida-qeq/master/setup.json",
      "name": "aiida-qeq",
      "package_name": "aiida_qeq",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2018-11-21",
        "description": "AiiDA plugin for computing electronic charges on atoms using equilibration-type models (QEq, EQEq, ...).",
        "author": "Leopold Talirz, Daniele Ongari",
        "author_email": "leopold.talirz@gmail.com",
        "license": "MIT",
        "home_page": "https://github.com/ltalirz/aiida-qeq",
        "classifiers": [
          "Programming Language :: Python"
        ],
        "version": "0.1.0"
      },
      "aiida_version": ">=0.12.2,<1.0.0",
      "entry_points": {
        "aiida.calculations": {
          "qeq.eqeq": "aiida_qeq.calculations.eqeq:EQeqCalculation",
          "qeq.qeq": "aiida_qeq.calculations.qeq:QeqCalculation"
        },
        "aiida.data": {
          "qeq.eqeq": "aiida_qeq.data.eqeq:EQeqParameters",
          "qeq.qeq": "aiida_qeq.data.qeq:QeqParameters"
        },
        "aiida.parsers": {
          "qeq.eqeq": "aiida_qeq.parsers.eqeq:EQeqParser",
          "qeq.qeq": "aiida_qeq.parsers.qeq:QeqParser"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-qeq<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W003'>W003</a>: Missing classifier 'Framework :: AiiDA'",
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 2
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 2
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 2
        }
      ],
      "pip_install_cmd": "pip install aiida-qeq",
      "is_installable": "False"
    },
    "aiida-qp2": {
      "code_home": "https://github.com/TREX-CoE/aiida-qp2",
      "entry_point_prefix": "qp2",
      "pip_url": "aiida-qp2",
      "documentation_url": "https://trex-coe.github.io/aiida-qp2/index.html",
      "name": "aiida-qp2",
      "package_name": "aiida_qp2",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2022-02-26",
        "description": "AiiDA plugin for the Quantum Package 2.0",
        "author": "Evgeny Posenitskiy",
        "author_email": "posenitskiy@irsamc.ups-tlse.fr",
        "license": "MIT",
        "home_page": "https://github.com/TREX-CoE/aiida-qp2",
        "classifiers": [
          "Development Status :: 4 - Beta",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python"
        ],
        "version": "0.2.0"
      },
      "aiida_version": null,
      "entry_points": {
        "console_scripts": {
          "aqp": "aiida_qp2.cli:cli_root"
        },
        "aiida.cmdline.data": {
          "qp2.cli": "aiida_qp2.cli:cli_root"
        },
        "aiida.calculations": {
          "qp2": "aiida_qp2.calculations:QP2Calculation",
          "qp2.create": "aiida_qp2.create.calculation:QP2CreateCalculation",
          "qp2.run": "aiida_qp2.run.calculation:QP2RunCalculation",
          "qp2.qmcchemrun": "aiida_qp2.run.qmcchem_calculation:QP2QmcchemRunCalculation"
        },
        "aiida.parsers": {
          "qp2": "aiida_qp2.parsers:QP2Parser",
          "qp2.create": "aiida_qp2.create.parser:QP2CreateParser",
          "qp2.run": "aiida_qp2.run.parser:QP2RunParser",
          "qp2.qmcchemrun": "aiida_qp2.run.qmcchem_parser:QP2QmcchemRunParser"
        }
      },
      "commits_count": 8,
      "development_status": "beta",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-qp2<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W019'>W019</a>: No <code>bdist_wheel</code> available for PyPI release.",
        "<a href='https://github.com/aiidateam/aiida-registry#W002'>W002</a>: AiiDA version not found"
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 4
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 4
        },
        {
          "colorclass": "purple",
          "text": "Console scripts",
          "count": 1
        },
        {
          "colorclass": "orange",
          "text": "Other (Data commands)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-qp2",
      "is_installable": "False"
    },
    "aiida-quantumespresso": {
      "code_home": "https://github.com/aiidateam/aiida-quantumespresso",
      "documentation_url": "https://aiida-quantumespresso.readthedocs.io/",
      "entry_point_prefix": "quantumespresso",
      "pip_url": "aiida-quantumespresso",
      "plugin_info": "https://raw.github.com/aiidateam/aiida-quantumespresso/master/setup.json",
      "name": "aiida-quantumespresso",
      "package_name": "aiida_quantumespresso",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2025-02-03",
        "description": "The official AiiDA plugin for Quantum ESPRESSO",
        "author_email": "The AiiDA team <developers@aiida.net>",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.9"
        ],
        "version": "4.9.0"
      },
      "aiida_version": ">=2.3,<3.0",
      "entry_points": {
        "aiida.calculations": {
          "quantumespresso.bands": "aiida_quantumespresso.calculations.bands:BandsCalculation",
          "quantumespresso.cp": "aiida_quantumespresso.calculations.cp:CpCalculation",
          "quantumespresso.create_kpoints_from_distance": "aiida_quantumespresso.calculations.functions.create_kpoints_from_distance:create_kpoints_from_distance",
          "quantumespresso.create_magnetic_configuration": "aiida_quantumespresso.calculations.functions.create_magnetic_configuration:create_magnetic_configuration",
          "quantumespresso.dos": "aiida_quantumespresso.calculations.dos:DosCalculation",
          "quantumespresso.epw": "aiida_quantumespresso.calculations.epw:EpwCalculation",
          "quantumespresso.matdyn": "aiida_quantumespresso.calculations.matdyn:MatdynCalculation",
          "quantumespresso.merge_ph_outputs": "aiida_quantumespresso.calculations.functions.merge_ph_outputs:merge_ph_outputs",
          "quantumespresso.namelists": "aiida_quantumespresso.calculations.namelists:NamelistsCalculation",
          "quantumespresso.neb": "aiida_quantumespresso.calculations.neb:NebCalculation",
          "quantumespresso.open_grid": "aiida_quantumespresso.calculations.open_grid:OpenGridCalculation",
          "quantumespresso.ph": "aiida_quantumespresso.calculations.ph:PhCalculation",
          "quantumespresso.pp": "aiida_quantumespresso.calculations.pp:PpCalculation",
          "quantumespresso.projwfc": "aiida_quantumespresso.calculations.projwfc:ProjwfcCalculation",
          "quantumespresso.pw": "aiida_quantumespresso.calculations.pw:PwCalculation",
          "quantumespresso.pw2gw": "aiida_quantumespresso.calculations.pw2gw:Pw2gwCalculation",
          "quantumespresso.pw2wannier90": "aiida_quantumespresso.calculations.pw2wannier90:Pw2wannier90Calculation",
          "quantumespresso.pwimmigrant": "aiida_quantumespresso.calculations.pwimmigrant:PwimmigrantCalculation",
          "quantumespresso.q2r": "aiida_quantumespresso.calculations.q2r:Q2rCalculation",
          "quantumespresso.seekpath_structure_analysis": "aiida_quantumespresso.calculations.functions.seekpath_structure_analysis:seekpath_structure_analysis",
          "quantumespresso.xspectra": "aiida_quantumespresso.calculations.xspectra:XspectraCalculation"
        },
        "aiida.data": {
          "quantumespresso.force_constants": "aiida_quantumespresso.data.force_constants:ForceConstantsData",
          "quantumespresso.hubbard_structure": "aiida_quantumespresso.data.hubbard_structure:HubbardStructureData"
        },
        "aiida.parsers": {
          "quantumespresso.bands": "aiida_quantumespresso.parsers.bands:BandsParser",
          "quantumespresso.cp": "aiida_quantumespresso.parsers.cp:CpParser",
          "quantumespresso.dos": "aiida_quantumespresso.parsers.dos:DosParser",
          "quantumespresso.matdyn": "aiida_quantumespresso.parsers.matdyn:MatdynParser",
          "quantumespresso.neb": "aiida_quantumespresso.parsers.neb:NebParser",
          "quantumespresso.open_grid": "aiida_quantumespresso.parsers.open_grid:OpenGridParser",
          "quantumespresso.ph": "aiida_quantumespresso.parsers.ph:PhParser",
          "quantumespresso.pp": "aiida_quantumespresso.parsers.pp:PpParser",
          "quantumespresso.projwfc": "aiida_quantumespresso.parsers.projwfc:ProjwfcParser",
          "quantumespresso.pw": "aiida_quantumespresso.parsers.pw:PwParser",
          "quantumespresso.pw2gw": "aiida_quantumespresso.parsers.pw2gw:Pw2gwParser",
          "quantumespresso.pw2wannier90": "aiida_quantumespresso.parsers.pw2wannier90:Pw2wannier90Parser",
          "quantumespresso.q2r": "aiida_quantumespresso.parsers.q2r:Q2rParser",
          "quantumespresso.xspectra": "aiida_quantumespresso.parsers.xspectra:XspectraParser"
        },
        "aiida.tools.calculations": {
          "quantumespresso.pw": "aiida_quantumespresso.tools.calculations.pw:PwCalculationTools"
        },
        "aiida.tools.data.orbitals": {
          "noncollinearhydrogen": "aiida_quantumespresso.tools.data.orbital.noncollinearhydrogen:NoncollinearHydrogenOrbital",
          "spinorbithydrogen": "aiida_quantumespresso.tools.data.orbital.spinorbithydrogen:SpinorbitHydrogenOrbital"
        },
        "aiida.workflows": {
          "quantumespresso.bands.base": "aiida_quantumespresso.workflows.bands.base:BandsBaseWorkChain",
          "quantumespresso.matdyn.base": "aiida_quantumespresso.workflows.matdyn.base:MatdynBaseWorkChain",
          "quantumespresso.pdos": "aiida_quantumespresso.workflows.pdos:PdosWorkChain",
          "quantumespresso.ph.base": "aiida_quantumespresso.workflows.ph.base:PhBaseWorkChain",
          "quantumespresso.pw.bands": "aiida_quantumespresso.workflows.pw.bands:PwBandsWorkChain",
          "quantumespresso.pw.base": "aiida_quantumespresso.workflows.pw.base:PwBaseWorkChain",
          "quantumespresso.pw.relax": "aiida_quantumespresso.workflows.pw.relax:PwRelaxWorkChain",
          "quantumespresso.q2r.base": "aiida_quantumespresso.workflows.q2r.base:Q2rBaseWorkChain",
          "quantumespresso.xps": "aiida_quantumespresso.workflows.xps:XpsWorkChain",
          "quantumespresso.xspectra.base": "aiida_quantumespresso.workflows.xspectra.base:XspectraBaseWorkChain",
          "quantumespresso.xspectra.core": "aiida_quantumespresso.workflows.xspectra.core:XspectraCoreWorkChain",
          "quantumespresso.xspectra.crystal": "aiida_quantumespresso.workflows.xspectra.crystal:XspectraCrystalWorkChain"
        },
        "console_scripts": {
          "aiida-quantumespresso": "aiida_quantumespresso.cli:cmd_root"
        }
      },
      "commits_count": 31,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-quantumespresso<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'noncollinearhydrogen' does not start with prefix 'quantumespresso.'",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'spinorbithydrogen' does not start with prefix 'quantumespresso.'"
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 21
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 14
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 2
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 12
        },
        {
          "colorclass": "purple",
          "text": "Console scripts",
          "count": 1
        },
        {
          "colorclass": "orange",
          "text": "Other (Tools calculations, Tools data orbitals)",
          "count": 3
        }
      ],
      "pip_install_cmd": "pip install aiida-quantumespresso",
      "is_installable": "False"
    },
    "aiida-quantumespresso-hp": {
      "code_home": "https://github.com/aiidateam/aiida-quantumespresso-hp",
      "entry_point_prefix": "quantumespresso.hp",
      "pip_url": "git+https://github.com/aiidateam/aiida-quantumespresso-hp",
      "name": "aiida-quantumespresso-hp",
      "package_name": "aiida_quantumespresso_hp",
      "hosted_on": "github.com",
      "metadata": {
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Framework :: AiiDA",
          "License :: Free To Use But Restricted",
          "Operating System :: POSIX :: Linux",
          "Operating System :: MacOS :: MacOS X",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12"
        ],
        "author": "Lorenzo Bastonero",
        "author_email": "lbastone@uni-bremen.de"
      },
      "aiida_version": ">=2.3,<2.6",
      "entry_points": {
        "aiida.calculations": {
          "quantumespresso.hp": "aiida_hubbard.calculations.hp:HpCalculation"
        },
        "aiida.parsers": {
          "quantumespresso.hp": "aiida_hubbard.parsers.hp:HpParser"
        },
        "aiida.workflows": {
          "quantumespresso.hp.main": "aiida_hubbard.workflows.hp.main:HpWorkChain",
          "quantumespresso.hp.parallelize_atoms": "aiida_hubbard.workflows.hp.parallelize_atoms:HpParallelizeAtomsWorkChain",
          "quantumespresso.hp.parallelize_qpoints": "aiida_hubbard.workflows.hp.parallelize_qpoints:HpParallelizeQpointsWorkChain",
          "quantumespresso.hp.base": "aiida_hubbard.workflows.hp.base:HpBaseWorkChain",
          "quantumespresso.hp.hubbard": "aiida_hubbard.workflows.hubbard:SelfConsistentHubbardWorkChain"
        }
      },
      "commits_count": 28,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-quantumespresso-hp<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W009'>W009</a>: Prefix 'quantumespresso.hp' does not follow naming convention."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 5
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/aiidateam/aiida-quantumespresso-hp",
      "is_installable": "False"
    },
    "aiida-raspa": {
      "code_home": "https://github.com/yakutovicha/aiida-raspa",
      "entry_point_prefix": "raspa",
      "pip_url": "aiida-raspa",
      "plugin_info": "https://raw.github.com/yakutovicha/aiida-raspa/master/setup.json",
      "name": "aiida-raspa",
      "package_name": "aiida_raspa",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2023-08-26",
        "description": "AiiDA plugin for RASPA code",
        "author_email": "Aliaksandr Yakutovich <aliaksandr.yakutovich@epfl.ch>, Miriam Pougin <miriam.pougin@epfl.ch>",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9"
        ],
        "version": "2.0.0"
      },
      "aiida_version": ">=2.3,<3.0",
      "entry_points": {
        "aiida.calculations": {
          "raspa": "aiida_raspa.calculations:RaspaCalculation"
        },
        "aiida.parsers": {
          "raspa": "aiida_raspa.parsers:RaspaParser"
        },
        "aiida.workflows": {
          "raspa.base": "aiida_raspa.workchains:RaspaBaseWorkChain"
        }
      },
      "commits_count": 0,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-raspa<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-raspa",
      "is_installable": "False"
    },
    "aiida-shell": {
      "code_home": "https://github.com/sphuber/aiida-shell",
      "entry_point_prefix": "core",
      "pip_url": "aiida-shell",
      "plugin_info": "https://raw.github.com/sphuber/aiida-shell/master/pyproject.toml",
      "name": "aiida-shell",
      "package_name": "aiida_shell",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2024-09-18",
        "description": "AiiDA plugin that makes running shell commands easy.",
        "author_email": "\"Sebastiaan P. Huber\" <mail@sphuber.net>",
        "classifiers": [
          "Development Status :: 4 - Beta",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.9",
          "Topic :: Scientific/Engineering"
        ],
        "version": "0.8.0"
      },
      "aiida_version": ">=2.6.1,<3.0",
      "entry_points": {
        "aiida.calculations": {
          "core.shell": "aiida_shell.calculations.shell:ShellJob"
        },
        "aiida.data": {
          "core.code.installed.shell": "aiida_shell.data.code:ShellCode",
          "core.entry_point": "aiida_shell.data.entry_point:EntryPointData",
          "core.pickled": "aiida_shell.data.pickled:PickledData"
        },
        "aiida.parsers": {
          "core.shell": "aiida_shell.parsers.shell:ShellParser"
        }
      },
      "commits_count": 22,
      "development_status": "beta",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-shell<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W009'>W009</a>: Prefix 'core' does not follow naming convention."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 3
        }
      ],
      "pip_install_cmd": "pip install aiida-shell",
      "is_installable": "False"
    },
    "aiida-siesta": {
      "code_home": "https://github.com/siesta-project/aiida_siesta_plugin/tree/master",
      "documentation_url": "https://aiida-siesta-plugin.readthedocs.io/",
      "entry_point_prefix": "siesta",
      "pip_url": "aiida-siesta",
      "name": "aiida-siesta",
      "package_name": "aiida_siesta",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2022-07-17",
        "description": "A plugin for Siesta's basic functionality within the AiiDA framework.",
        "author_email": "Albero Garcia <albertog@icmab.es>, \"Victor M. Garcia-Suarez\" <garciavictor@uniovi.es>, Emanuele Bosoni <ebosoni@icmab.es>, Vladimir Dikan <vdikan@icmab.es>, Pol Febrer <pol.febrer@icn2.cat>",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9"
        ],
        "version": "2.0.0"
      },
      "aiida_version": ">=2.0.0,<3.0.0",
      "entry_points": {
        "aiida.calculations": {
          "siesta.siesta": "aiida_siesta.calculations.siesta:SiestaCalculation",
          "siesta.stm": "aiida_siesta.calculations.stm:STMCalculation"
        },
        "aiida.parsers": {
          "siesta.parser": "aiida_siesta.parsers.siesta:SiestaParser",
          "siesta.stm": "aiida_siesta.parsers.stm:STMParser"
        },
        "aiida.workflows": {
          "siesta.base": "aiida_siesta.workflows.base:SiestaBaseWorkChain",
          "siesta.eos": "aiida_siesta.workflows.eos:EqOfStateFixedCellShape",
          "siesta.bandgap": "aiida_siesta.workflows.bandgap:BandgapWorkChain",
          "siesta.stm": "aiida_siesta.workflows.stm:SiestaSTMWorkChain",
          "siesta.baseneb": "aiida_siesta.workflows.neb_base:SiestaBaseNEBWorkChain",
          "siesta.epsilon": "aiida_siesta.workflows.epsilon:EpsilonWorkChain",
          "siesta.iterator": "aiida_siesta.workflows.iterate:SiestaIterator",
          "siesta.converger": "aiida_siesta.workflows.converge:SiestaConverger",
          "siesta.sequential_converger": "aiida_siesta.workflows.converge:SiestaSequentialConverger",
          "siesta.forbasisopt": "aiida_siesta.workflows._for_optimization:ForBasisOptWorkChain",
          "siesta.simplex_basis": "aiida_siesta.workflows.simplex_basis:SimplexBasisOptimization",
          "siesta.two_step_basis_opt": "aiida_siesta.workflows.two_steps_optimization:TwoStepsBasisOpt",
          "siesta.basis_optimization": "aiida_siesta.workflows.basis_optimization:BasisOptimizationWorkChain"
        },
        "aiida.data": {
          "siesta.ion": "aiida_siesta.data.ion:IonData"
        },
        "aiida.tools.data.orbitals": {
          "siesta.atomic_orbital": "aiida_siesta.data.atomic_orbitals:SislAtomicOrbital"
        }
      },
      "commits_count": 0,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-siesta<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W019'>W019</a>: No <code>bdist_wheel</code> available for PyPI release."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 2
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 2
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 13
        },
        {
          "colorclass": "orange",
          "text": "Other (Tools data orbitals)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-siesta",
      "is_installable": "False"
    },
    "aiida-spex": {
      "code_home": "https://github.com/JuDFTteam/aiida-spex",
      "entry_point_prefix": "spex",
      "pip_url": "git+https://github.com/JuDFTteam/aiida-spex",
      "name": "aiida-spex",
      "package_name": "aiida_spex",
      "hosted_on": "github.com",
      "metadata": {
        "author": "The SPEX Team",
        "author_email": "a.chandran@fz-juelich.de",
        "version": "1.1.2",
        "description": "AiiDA plugin for SPEX code",
        "classifiers": [
          "Programming Language :: Python",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Framework :: AiiDA"
        ]
      },
      "aiida_version": ">=1.0.0b3,<3.0.0",
      "entry_points": {
        "aiida.calculations": {
          "spex.spex": "aiida_spex.calculations.spex:SpexCalculation"
        },
        "aiida.data": {
          "spex.spexinp": "aiida_spex.data.spexinp:SpexinpData"
        },
        "aiida.parsers": {
          "spex.spexparser": "aiida_spex.parsers.spex:SpexParser"
        },
        "aiida.workflows": {
          "spex.job": "aiida_spex.workflows.job:SpexJobWorkchain"
        }
      },
      "commits_count": 0,
      "development_status": "planning",
      "errors": [],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/JuDFTteam/aiida-spex"
    },
    "aiida-spirit": {
      "code_home": "https://github.com/JuDFTteam/aiida-spirit/tree/main",
      "documentation_url": "https://aiida-spirit.readthedocs.io/",
      "entry_point_prefix": "spirit",
      "name": "aiida-spirit",
      "pip_url": "aiida-spirit",
      "package_name": "aiida_spirit",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2023-06-23",
        "description": "AiiDA plugin for the spirit code",
        "author": "The JuDFT Team",
        "author_email": "p.ruessmann@fz-juelich.de",
        "license": "MIT",
        "home_page": "https://github.com/JuDFTteam/aiida-spirit",
        "classifiers": [
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Programming Language :: Python"
        ],
        "version": "0.2.2"
      },
      "aiida_version": null,
      "entry_points": {
        "aiida.calculations": {
          "spirit": "aiida_spirit.calculations:SpiritCalculation"
        },
        "aiida.parsers": {
          "spirit": "aiida_spirit.parsers:SpiritParser"
        }
      },
      "commits_count": 0,
      "development_status": "planning",
      "errors": [],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W019'>W019</a>: No <code>bdist_wheel</code> available for PyPI release.",
        "<a href='https://github.com/aiidateam/aiida-registry#W002'>W002</a>: AiiDA version not found"
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-spirit"
    },
    "aiida-ssh2win": {
      "entry_point_prefix": "ssh2win",
      "code_home": "https://github.com/edan-bainglass/aiida-ssh2win",
      "version_file": "https://raw.githubusercontent.com/edan-bainglass/aiida-ssh2win/develop/aiida_ssh2win/__init__.py",
      "pip_url": "git+https://github.com/edan-bainglass/aiida-ssh2win",
      "name": "aiida-ssh2win",
      "package_name": "aiida_ssh2win",
      "hosted_on": "github.com",
      "metadata": {},
      "aiida_version": null,
      "entry_points": {},
      "commits_count": 0,
      "development_status": "planning",
      "errors": [],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Cannot fetch all data from PyPI and missing plugin_info key!",
        "<a href='https://github.com/aiidateam/aiida-registry#W002'>W002</a>: AiiDA version not found"
      ],
      "summaryinfo": [],
      "pip_install_cmd": "pip install git+https://github.com/edan-bainglass/aiida-ssh2win"
    },
    "aiida-sshonly": {
      "code_home": "https://github.com/adegomme/aiida-sshonly",
      "development_status": "beta",
      "entry_point_prefix": "sshonly",
      "pip_url": "aiida-sshonly",
      "plugin_info": "https://raw.github.com/adegomme/aiida-sshonly/master/setup.json",
      "name": "aiida-sshonly",
      "package_name": "aiida_sshonly",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2020-10-07",
        "description": "AiiDA plugin adding a sshonly transport option, using only SSH to transfer files, avoiding SFTP, in case it's blocked or non functional on a remote system",
        "author": "adegomme",
        "license": "MIT",
        "home_page": "https://github.com/adegomme/aiida-sshonly",
        "classifiers": [
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Programming Language :: Python"
        ],
        "version": "0.1.0a3"
      },
      "aiida_version": ">=1.3.0,<2.0.0",
      "entry_points": {
        "aiida.transports": {
          "ssh_only": "aiida_sshonly.transports.sshonly:SshOnlyTransport"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-sshonly<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead.",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'ssh_only' does not start with prefix 'sshonly.'"
      ],
      "summaryinfo": [
        {
          "colorclass": "orange",
          "text": "Other (Transports)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install --pre aiida-sshonly",
      "is_installable": "False"
    },
    "aiida-statefile-schedulers": {
      "code_home": "https://github.com/dev-zero/aiida-statefile-schedulers",
      "development_status": "beta",
      "entry_point_prefix": "statefile_schedulers",
      "pip_url": "aiida-statefile-schedulers",
      "name": "aiida-statefile-schedulers",
      "package_name": "aiida_statefile_schedulers",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2021-11-23",
        "description": "Simple statefile-driven task schedulers for AiiDA",
        "author": "Tiziano M\u00fcller",
        "author_email": "tm@dev-zero.ch",
        "license": "MIT",
        "home_page": "https://github.com/dev-zero/aiida-statefile-schedulers",
        "classifiers": [
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Programming Language :: Python"
        ],
        "version": "0.2.1"
      },
      "aiida_version": null,
      "entry_points": {
        "aiida.schedulers": {
          "statefile_schedulers.direct": "aiida_statefile_schedulers.schedulers.direct:StatefileDirectScheduler"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-statefile-schedulers<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W019'>W019</a>: No <code>bdist_wheel</code> available for PyPI release.",
        "<a href='https://github.com/aiidateam/aiida-registry#W002'>W002</a>: AiiDA version not found",
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "orange",
          "text": "Other (Schedulers)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-statefile-schedulers",
      "is_installable": "False"
    },
    "aiida-strain": {
      "code_home": "https://github.com/greschd/aiida-strain",
      "documentation_url": "https://aiida-strain.readthedocs.io",
      "entry_point_prefix": "strain",
      "pip_url": "aiida-strain",
      "name": "aiida-strain",
      "package_name": "aiida_strain",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2019-11-22",
        "description": "AiiDA Plugin for applying strain to structures",
        "author": "Dominik Gresch",
        "author_email": "greschd@gmx.ch",
        "license": "Apache 2.0",
        "home_page": "https://aiida-strain.readthedocs.io",
        "classifiers": [
          "Development Status :: 3 - Alpha",
          "Environment :: Plugins",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Topic :: Scientific/Engineering :: Physics"
        ],
        "version": "0.2.0"
      },
      "aiida_version": null,
      "entry_points": {
        "aiida.workflows": {
          "strain.apply_strains": "aiida_strain:ApplyStrains",
          "strain.apply_strains_with_symmetry": "aiida_strain:ApplyStrainsWithSymmetry"
        }
      },
      "commits_count": 0,
      "development_status": "alpha",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-strain<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W019'>W019</a>: No <code>bdist_wheel</code> available for PyPI release.",
        "<a href='https://github.com/aiidateam/aiida-registry#W002'>W002</a>: AiiDA version not found"
      ],
      "summaryinfo": [
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 2
        }
      ],
      "pip_install_cmd": "pip install aiida-strain",
      "is_installable": "False"
    },
    "aiida-supercell": {
      "code_home": "https://github.com/pzarabadip/aiida-supercell",
      "development_status": "stable",
      "documentation_url": "https://aiida-supercell.readthedocs.io/",
      "entry_point_prefix": "supercell",
      "pip_url": "git+https://github.com/pzarabadip/aiida-supercell",
      "name": "aiida-supercell",
      "package_name": "aiida_supercell",
      "hosted_on": "github.com",
      "metadata": {
        "author": "Pezhman Zarabadi-Poor",
        "author_email": "pzarabadip@gmail.com",
        "version": "1.0.1",
        "description": "AiiDA Plugin for Supercell program",
        "classifiers": [
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9"
        ]
      },
      "aiida_version": ">=1.0.0,<2.0",
      "entry_points": {
        "aiida.calculations": {
          "supercell": "aiida_supercell.calculations:SupercellCalculation"
        },
        "aiida.parsers": {
          "supercell": "aiida_supercell.parsers:SupercellParser"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-supercell<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W003'>W003</a>: Missing classifier 'Framework :: AiiDA'",
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/pzarabadip/aiida-supercell",
      "is_installable": "False"
    },
    "aiida-symmetry-representation": {
      "code_home": "https://github.com/greschd/aiida_symmetry_representation",
      "documentation_url": "https://aiida-symmetry-representation.readthedocs.io",
      "entry_point_prefix": "symmetry_representation",
      "pip_url": "aiida-symmetry-representation",
      "name": "aiida-symmetry-representation",
      "package_name": "aiida_symmetry_representation",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2019-11-18",
        "description": "AiiDA Plugin for symmetry representations.",
        "author": "Dominik Gresch",
        "author_email": "greschd@gmx.ch",
        "license": "Apache 2.0",
        "home_page": "https://aiida-symmetry-representation.readthedocs.io",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Plugins",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Topic :: Scientific/Engineering :: Physics"
        ],
        "version": "0.2.0"
      },
      "aiida_version": null,
      "entry_points": {
        "aiida.calculations": {
          "symmetry_representation.filter_symmetries": "aiida_symmetry_representation.calculations.filter_symmetries:FilterSymmetriesCalculation"
        },
        "aiida.parsers": {
          "symmetry_representation.symmetry": "aiida_symmetry_representation.parsers.symmetries:SymmetriesParser"
        }
      },
      "commits_count": 0,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-symmetry-representation<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W019'>W019</a>: No <code>bdist_wheel</code> available for PyPI release.",
        "<a href='https://github.com/aiidateam/aiida-registry#W002'>W002</a>: AiiDA version not found"
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-symmetry-representation",
      "is_installable": "False"
    },
    "aiida-tbextraction": {
      "code_home": "https://github.com/greschd/aiida-tbextraction",
      "documentation_url": "https://aiida-tbextraction.readthedocs.io/",
      "entry_point_prefix": "tbextraction",
      "pip_url": "aiida-tbextraction",
      "name": "aiida-tbextraction",
      "package_name": "aiida_tbextraction",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2020-02-25",
        "description": "AiiDA Plugin for extracting tight-binding models",
        "author": "Dominik Gresch",
        "author_email": "greschd@gmx.ch",
        "license": "Apache 2.0",
        "home_page": "https://aiida-tbextraction.readthedocs.io",
        "classifiers": [
          "Development Status :: 4 - Beta",
          "Environment :: Plugins",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Topic :: Scientific/Engineering :: Physics"
        ],
        "version": "0.2.0b1"
      },
      "aiida_version": null,
      "entry_points": {
        "aiida.workflows": {
          "tbextraction.fp_run.base": "aiida_tbextraction.fp_run:FirstPrinciplesRunBase",
          "tbextraction.fp_run.reference_bands.base": "aiida_tbextraction.fp_run.reference_bands:ReferenceBandsBase",
          "tbextraction.fp_run.wannier_input.base": "aiida_tbextraction.fp_run.wannier_input:WannierInputBase",
          "tbextraction.calculate_tb": "aiida_tbextraction.calculate_tb:TightBindingCalculation",
          "tbextraction.model_evaluation.base": "aiida_tbextraction.model_evaluation:ModelEvaluationBase",
          "tbextraction.model_evaluation.band_difference": "aiida_tbextraction.model_evaluation:BandDifferenceModelEvaluation",
          "tbextraction.energy_windows.run_window": "aiida_tbextraction.energy_windows.run_window:RunWindow",
          "tbextraction.energy_windows.window_search": "aiida_tbextraction.energy_windows.window_search:WindowSearch",
          "tbextraction.optimize_fp_tb": "aiida_tbextraction.optimize_fp_tb:OptimizeFirstPrinciplesTightBinding",
          "tbextraction.optimize_strained_fp_tb": "aiida_tbextraction.optimize_strained_fp_tb:OptimizeStrainedFirstPrinciplesTightBinding"
        }
      },
      "commits_count": 0,
      "development_status": "beta",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-tbextraction<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W019'>W019</a>: No <code>bdist_wheel</code> available for PyPI release.",
        "<a href='https://github.com/aiidateam/aiida-registry#W002'>W002</a>: AiiDA version not found"
      ],
      "summaryinfo": [
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 10
        }
      ],
      "pip_install_cmd": "pip install --pre aiida-tbextraction",
      "is_installable": "False"
    },
    "aiida-tbmodels": {
      "code_home": "https://github.com/greschd/aiida-tbmodels",
      "documentation_url": "https://aiida-tbmodels.readthedocs.io",
      "entry_point_prefix": "tbmodels",
      "pip_url": "aiida-tbmodels",
      "name": "aiida-tbmodels",
      "package_name": "aiida_tbmodels",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2020-03-03",
        "description": "AiiDA Plugin for running TBmodels",
        "author": "Dominik Gresch",
        "author_email": "greschd@gmx.ch",
        "license": "Apache 2.0",
        "home_page": "https://aiida-tbmodels.readthedocs.io",
        "classifiers": [
          "Development Status :: 3 - Alpha",
          "Environment :: Plugins",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: Apache Software License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.6",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Topic :: Scientific/Engineering :: Physics"
        ],
        "version": "0.3.0"
      },
      "aiida_version": null,
      "entry_points": {
        "aiida.calculations": {
          "tbmodels.eigenvals": "aiida_tbmodels.calculations.eigenvals:EigenvalsCalculation",
          "tbmodels.parse": "aiida_tbmodels.calculations.parse:ParseCalculation",
          "tbmodels.slice": "aiida_tbmodels.calculations.slice:SliceCalculation",
          "tbmodels.symmetrize": "aiida_tbmodels.calculations.symmetrize:SymmetrizeCalculation"
        },
        "aiida.parsers": {
          "tbmodels.model": "aiida_tbmodels.parsers.model:ModelParser"
        }
      },
      "commits_count": 0,
      "development_status": "alpha",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-tbmodels<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W019'>W019</a>: No <code>bdist_wheel</code> available for PyPI release.",
        "<a href='https://github.com/aiidateam/aiida-registry#W002'>W002</a>: AiiDA version not found"
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 4
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-tbmodels",
      "is_installable": "False"
    },
    "aiida-tcod": {
      "code_home": "https://github.com/aiidateam/aiida-tcod",
      "development_status": "beta",
      "entry_point_prefix": "tcod",
      "pip_url": "git+https://github.com/aiidateam/aiida-tcod",
      "name": "aiida-tcod",
      "package_name": "aiida_tcod",
      "hosted_on": "github.com",
      "metadata": {
        "author": "The AiiDA team",
        "author_email": "developers@aiida.net",
        "version": "0.1.0a0",
        "description": "AiiDA plugin to interact with the TCOD",
        "classifiers": [
          "Programming Language :: Python"
        ]
      },
      "aiida_version": ">=1.0.0b1",
      "entry_points": {
        "aiida.tools.dbexporters": {
          "tcod": "aiida.tools.dbexporters.tcod"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-tcod<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W003'>W003</a>: Missing classifier 'Framework :: AiiDA'",
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "orange",
          "text": "Other (Database Exporters)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/aiidateam/aiida-tcod",
      "is_installable": "False"
    },
    "aiida-uppasd": {
      "code_home": "https://github.com/uppasd/aiida-uppasd",
      "documentation_url": "https://github.com/uppasd/aiida-uppasd/blob/master/README.md",
      "entry_point_prefix": "uppasd",
      "pip_url": "git+https://github.com/unkcpz/aiida-uppasd",
      "name": "aiida-uppasd",
      "package_name": "aiida_uppasd",
      "hosted_on": "github.com",
      "metadata": {
        "author": "Qichen Xu, Anders Bergman, Anna Delin, Jonathan Chico",
        "author_email": "qichenx@kth.se",
        "version": "0.1.0",
        "description": "Interface for UppASD and AiiDA",
        "classifiers": [
          "Programming Language :: Python",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Framework :: AiiDA"
        ]
      },
      "aiida_version": ">=1.1.0,<2.0.0",
      "entry_points": {
        "aiida.calculations": {
          "UppASD_core_calculations": "UppASD_AiiDA.calculations.core_calcs:UppASD"
        },
        "aiida.parsers": {
          "UppASD_core_parsers": "UppASD_AiiDA.parsers.core_parser:SpinDynamic_core_parser"
        }
      },
      "commits_count": 0,
      "development_status": "planning",
      "errors": [],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'UppASD_core_calculations' does not start with prefix 'uppasd.'",
        "<a href='https://github.com/aiidateam/aiida-registry#W010'>W010</a>: Entry point 'UppASD_core_parsers' does not start with prefix 'uppasd.'"
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/unkcpz/aiida-uppasd"
    },
    "aiida-vasp": {
      "code_home": "https://github.com/aiida-vasp/aiida-vasp",
      "documentation_url": "https://aiida-vasp.readthedocs.io/",
      "entry_point_prefix": "vasp",
      "pip_url": "aiida-vasp",
      "plugin_info": "https://raw.githubusercontent.com/aiida-vasp/aiida-vasp/master/setup.json",
      "name": "aiida-vasp",
      "package_name": "aiida_vasp",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2024-12-12",
        "description": "AiiDA plugin for running VASP calculations and workflows.",
        "author_email": "Espen Flage-Larsen <espen.flage-larsen@sigma2.no>",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Plugins",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Topic :: Scientific/Engineering :: Chemistry",
          "Topic :: Scientific/Engineering :: Physics"
        ],
        "version": "4.1.0"
      },
      "aiida_version": ">=2.6",
      "entry_points": {
        "aiida.calculations": {
          "vasp.immigrant": "aiida_vasp.calcs.immigrant:VaspImmigrant",
          "vasp.neb": "aiida_vasp.calcs.neb:VaspNEBCalculation",
          "vasp.vasp": "aiida_vasp.calcs.vasp:VaspCalculation",
          "vasp.vasp2w90": "aiida_vasp.calcs.vasp2w90:Vasp2w90Calculation"
        },
        "aiida.cmdline.data": {
          "vasp.potcar": "aiida_vasp.commands.potcar:potcar",
          "vasp.tools": "aiida_vasp.commands.tools:tools"
        },
        "aiida.data": {
          "vasp.archive": "aiida_vasp.data.archive:ArchiveData",
          "vasp.chargedensity": "aiida_vasp.data.chargedensity:ChargedensityData",
          "vasp.potcar": "aiida_vasp.data.potcar:PotcarData",
          "vasp.potcar_file": "aiida_vasp.data.potcar:PotcarFileData",
          "vasp.wavefun": "aiida_vasp.data.wavefun:WavefunData"
        },
        "aiida.groups": {
          "vasp.potcar": "aiida_vasp.data.potcar:PotcarGroup"
        },
        "aiida.parsers": {
          "vasp.neb": "aiida_vasp.parsers.neb:NebParser",
          "vasp.vasp": "aiida_vasp.parsers.vasp:VaspParser"
        },
        "aiida.workflows": {
          "vasp.bands": "aiida_vasp.workchains.v2.bands:VaspBandsWorkChain",
          "vasp.converge": "aiida_vasp.workchains.v2.converge:VaspConvergenceWorkChain",
          "vasp.hybrid_bands": "aiida_vasp.workchains.v2.bands:VaspHybridBandsWorkChain",
          "vasp.neb": "aiida_vasp.workchains.neb:VaspNEBWorkChain",
          "vasp.relax": "aiida_vasp.workchains.v2.relax:VaspRelaxWorkChain",
          "vasp.v2.bands": "aiida_vasp.workchains.v2.bands:VaspBandsWorkChain",
          "vasp.v2.converge": "aiida_vasp.workchains.v2.converge:VaspConvergenceWorkChain",
          "vasp.v2.hybrid_bands": "aiida_vasp.workchains.v2.bands:VaspHybridBandsWorkChain",
          "vasp.v2.relax": "aiida_vasp.workchains.v2.relax:VaspRelaxWorkChain",
          "vasp.v2.vasp": "aiida_vasp.workchains.v2.vasp:VaspWorkChain",
          "vasp.vasp": "aiida_vasp.workchains.v2.vasp:VaspWorkChain"
        },
        "console_scripts": {
          "dryrun-vasp": "aiida_vasp.commands.dryrun_vasp:cmd_dryrun_vasp",
          "mock-vasp": "aiida_vasp.commands.mock_vasp:mock_vasp",
          "mock-vasp-loose": "aiida_vasp.commands.mock_vasp:mock_vasp_loose"
        }
      },
      "commits_count": 251,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-vasp<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 4
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 2
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 5
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 11
        },
        {
          "colorclass": "purple",
          "text": "Console scripts",
          "count": 3
        },
        {
          "colorclass": "orange",
          "text": "Other (Data commands, Groups)",
          "count": 3
        }
      ],
      "pip_install_cmd": "pip install aiida-vasp",
      "is_installable": "False"
    },
    "aiida-vibroscopy": {
      "entry_point_prefix": "vibroscopy",
      "plugin_info": "https://raw.githubusercontent.com/bastonero/aiida-vibroscopy/main/pyproject.toml",
      "code_home": "https://github.com/bastonero/aiida-vibroscopy",
      "version_file": "https://raw.githubusercontent.com/bastonero/aiida-vibroscopy/main/src/aiida_vibroscopy/__init__.py",
      "pip_url": "aiida-vibroscopy",
      "documentation_url": "https://aiida-vibroscopy.readthedocs.io/en/latest/",
      "name": "aiida-vibroscopy",
      "package_name": "aiida_vibroscopy",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2025-03-06",
        "description": "AiiDA plugin for vibrational spectoscopy using Quantum ESPRESSO.",
        "author_email": "Lorenzo Bastonero <bastonero.lorenzo@gmail.com>",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Framework :: AiiDA",
          "License :: Other/Proprietary License",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9"
        ],
        "version": "1.2.0"
      },
      "aiida_version": ">=2.2.2,<3.0.0",
      "entry_points": {
        "aiida.data": {
          "vibroscopy.fp": "aiida_vibroscopy.data.vibro_fp:VibrationalFrozenPhononData",
          "vibroscopy.vibrational": "aiida_vibroscopy.data.vibro_lr:VibrationalData"
        },
        "aiida.workflows": {
          "vibroscopy.dielectric": "aiida_vibroscopy.workflows.dielectric.base:DielectricWorkChain",
          "vibroscopy.dielectric.numerical_derivatives": "aiida_vibroscopy.workflows.dielectric.numerical_derivatives:NumericalDerivativesWorkChain",
          "vibroscopy.phonons.harmonic": "aiida_vibroscopy.workflows.phonons.harmonic:HarmonicWorkChain",
          "vibroscopy.phonons.phonon": "aiida_vibroscopy.workflows.phonons.base:PhononWorkChain",
          "vibroscopy.spectra.intensities_average": "aiida_vibroscopy.workflows.spectra.intensities_average:IntensitiesAverageWorkChain",
          "vibroscopy.spectra.iraman": "aiida_vibroscopy.workflows.spectra.iraman:IRamanSpectraWorkChain"
        },
        "console_scripts": {
          "aiida-vibroscopy": "aiida_vibroscopy.cli:cmd_root"
        }
      },
      "commits_count": 21,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-vibroscopy<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "red",
          "text": "Data",
          "count": 2
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 6
        },
        {
          "colorclass": "purple",
          "text": "Console scripts",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-vibroscopy",
      "is_installable": "False"
    },
    "aiida-wannier90": {
      "code_home": "https://github.com/aiidateam/aiida-wannier90",
      "documentation_url": "https://aiida-wannier90.readthedocs.io/",
      "entry_point_prefix": "wannier90",
      "pip_url": "aiida-wannier90",
      "plugin_info": "https://raw.github.com/aiidateam/aiida-wannier90/master/setup.json",
      "name": "aiida-wannier90",
      "package_name": "aiida_wannier90",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2024-05-10",
        "description": "AiiDA Plugin for the Wannier90 code",
        "author": "Junfeng Qiao, Dominik Gresch, Antimo Marrazzo, Daniel Marchand, Giovanni Pizzi, Norma Rivano, The AiiDA team",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Plugins",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.9",
          "Topic :: Scientific/Engineering :: Physics"
        ],
        "version": "2.2.0"
      },
      "aiida_version": ">=2.0,<3",
      "entry_points": {
        "aiida.calculations": {
          "wannier90.postw90": "aiida_wannier90.calculations:Postw90Calculation",
          "wannier90.wannier90": "aiida_wannier90.calculations:Wannier90Calculation"
        },
        "aiida.parsers": {
          "wannier90.postw90": "aiida_wannier90.parsers:Postw90Parser",
          "wannier90.wannier90": "aiida_wannier90.parsers:Wannier90Parser"
        },
        "aiida.workflows": {
          "wannier90.minimal": "aiida_wannier90.workflows.minimal:MinimalW90WorkChain"
        }
      },
      "commits_count": 4,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-wannier90<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 2
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 2
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-wannier90",
      "is_installable": "False"
    },
    "aiida-wannier90-workflows": {
      "code_home": "https://github.com/aiidateam/aiida-wannier90-workflows",
      "development_status": "stable",
      "entry_point_prefix": "wannier90_workflows",
      "pip_url": "aiida-wannier90-workflows",
      "plugin_info": "https://raw.github.com/aiidateam/aiida-wannier90-workflows/master/setup.json",
      "name": "aiida-wannier90-workflows",
      "package_name": "aiida_wannier90_workflows",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2024-10-01",
        "description": "Advanced AiiDA workflows for Wannier90",
        "author_email": "The AiiDA team <developers@aiida.net>",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Environment :: Plugins",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: Free To Use But Restricted",
          "Natural Language :: English",
          "Operating System :: MacOS :: MacOS X",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.9",
          "Topic :: Scientific/Engineering :: Physics"
        ],
        "version": "2.3.0"
      },
      "aiida_version": ">=2.5,<3.0",
      "entry_points": {
        "aiida.calculations": {
          "wannier90_workflows.split": "aiida_wannier90_workflows.calculations.split:Wannier90SplitCalculation"
        },
        "aiida.parsers": {
          "wannier90_workflows.split": "aiida_wannier90_workflows.parsers.split:Wannier90SplitParser"
        },
        "aiida.workflows": {
          "wannier90_workflows.bands": "aiida_wannier90_workflows.workflows.bands:Wannier90BandsWorkChain",
          "wannier90_workflows.base.open_grid": "aiida_wannier90_workflows.workflows.base.open_grid:OpenGridBaseWorkChain",
          "wannier90_workflows.base.projwfc": "aiida_wannier90_workflows.workflows.base.projwfc:ProjwfcBaseWorkChain",
          "wannier90_workflows.base.pw2wannier90": "aiida_wannier90_workflows.workflows.base.pw2wannier90:Pw2wannier90BaseWorkChain",
          "wannier90_workflows.base.wannier90": "aiida_wannier90_workflows.workflows.base.wannier90:Wannier90BaseWorkChain",
          "wannier90_workflows.open_grid": "aiida_wannier90_workflows.workflows.open_grid:Wannier90OpenGridWorkChain",
          "wannier90_workflows.optimize": "aiida_wannier90_workflows.workflows.optimize:Wannier90OptimizeWorkChain",
          "wannier90_workflows.projwfcbands": "aiida_wannier90_workflows.workflows.projwfcbands:ProjwfcBandsWorkChain",
          "wannier90_workflows.split": "aiida_wannier90_workflows.workflows.split:Wannier90SplitWorkChain",
          "wannier90_workflows.wannier90": "aiida_wannier90_workflows.workflows.wannier90:Wannier90WorkChain"
        },
        "console_scripts": {
          "aiida-wannier90-workflows": "aiida_wannier90_workflows.cli:cmd_root"
        }
      },
      "commits_count": 28,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-wannier90-workflows<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 10
        },
        {
          "colorclass": "purple",
          "text": "Console scripts",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-wannier90-workflows",
      "is_installable": "False"
    },
    "aiida-wien2k": {
      "code_home": "https://github.com/rubel75/aiida-wien2k",
      "entry_point_prefix": "wien2k",
      "name": "aiida-wien2k",
      "package_name": "aiida_wien2k",
      "hosted_on": "github.com",
      "metadata": {},
      "aiida_version": null,
      "entry_points": {},
      "commits_count": 0,
      "development_status": "planning",
      "errors": [],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Cannot fetch all data from PyPI and missing plugin_info key!",
        "<a href='https://github.com/aiidateam/aiida-registry#W002'>W002</a>: AiiDA version not found"
      ],
      "summaryinfo": [],
      "pip_install_cmd": "See source code repository."
    },
    "aiida-yambo": {
      "code_home": "https://github.com/yambo-code/yambo-aiida/",
      "development_status": "stable",
      "entry_point_prefix": "yambo",
      "pip_url": "aiida-yambo",
      "plugin_info": "https://raw.github.com/yambo-code/yambo-aiida/master/setup.json",
      "name": "aiida-yambo",
      "package_name": "aiida_yambo",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2020-11-05",
        "description": "YAMBO plugin and workflows for AiiDA",
        "author": "Miki Bonacci, Michael Atambo, Antimo Marrazzo, Prandini Gianluca",
        "author_email": "miki.bonacci@unimore.it",
        "license": "MIT",
        "home_page": "https://github.com/yambo-code/yambo-aiida",
        "classifiers": [
          "Environment :: Plugins",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python",
          "Topic :: Scientific/Engineering :: Physics"
        ],
        "version": "1.3.0"
      },
      "aiida_version": ">=1.0.0a2",
      "entry_points": {
        "aiida.calculations": {
          "yambo.yambo": "aiida_yambo.calculations.yambo:YamboCalculation"
        },
        "aiida.data": {},
        "aiida.parsers": {
          "yambo.yambo": "aiida_yambo.parsers.parsers:YamboParser"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-yambo<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-yambo",
      "is_installable": "False"
    },
    "aiida-yambo-wannier90": {
      "code_home": "https://github.com/aiidaplugins/aiida-yambo-wannier90",
      "entry_point_prefix": "yambo_wannier90",
      "pip_url": "aiida-yambo-wannier90",
      "plugin_info": "https://raw.githubusercontent.com/aiidaplugins/aiida-yambo-wannier90/main/pyproject.toml",
      "documentation_url": "https://aiida-yambo-wannier90.readthedocs.io/en/latest/",
      "version_file": "https://raw.githubusercontent.com/aiidaplugins/aiida-yambo-wannier90/main/aiida_yambo_wannier90/__init__.py",
      "name": "aiida-yambo-wannier90",
      "package_name": "aiida_yambo_wannier90",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2022-07-06",
        "description": "Plugin to combine Wannier90 interpolations with GW corrections computed by Yambo",
        "author": "The AiiDA Team",
        "classifiers": [
          "Development Status :: 4 - Beta",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Natural Language :: English",
          "Programming Language :: Python"
        ],
        "version": "0.1.0b0"
      },
      "aiida_version": ">=1.6.4,<3",
      "entry_points": {
        "aiida.calculations": {
          "yambo_wannier90.gw2wannier90": "aiida_yambo_wannier90.calculations.gw2wannier90:Gw2wannier90Calculation"
        },
        "aiida.parsers": {
          "yambo_wannier90.gw2wannier90": "aiida_yambo_wannier90.parsers.gw2wannier90:Gw2wannier90Parser"
        },
        "aiida.workflows": {
          "yambo_wannier90": "aiida_yambo_wannier90.workflows:YamboWannier90WorkChain"
        },
        "console_scripts": {
          "aiida-yambo-wannier90": "aiida_yambo_wannier90.cli:cmd_root"
        }
      },
      "commits_count": 0,
      "development_status": "beta",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-yambo-wannier90<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 1
        },
        {
          "colorclass": "purple",
          "text": "Console scripts",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install --pre aiida-yambo-wannier90",
      "is_installable": "False"
    },
    "aiida-yascheduler": {
      "code_home": "https://github.com/tilde-lab/yascheduler",
      "documentation_url": "https://github.com/tilde-lab/yascheduler",
      "entry_point_prefix": "yascheduler",
      "pip_url": "yascheduler",
      "plugin_info": "https://raw.githubusercontent.com/tilde-lab/yascheduler/master/pyproject.toml",
      "name": "aiida-yascheduler",
      "package_name": "aiida_yascheduler",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2025-02-08",
        "description": "Yet another computing scheduler and cloud orchestration engine",
        "author": "Andrey Sobolev",
        "author_email": "Evgeny Blokhin <eb@tilde.pro>, Sergei Korolev <knopki@duck.com>",
        "classifiers": [
          "Development Status :: 4 - Beta",
          "Framework :: AiiDA",
          "Intended Audience :: Science/Research",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python :: 3",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.7",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Topic :: Scientific/Engineering :: Chemistry",
          "Topic :: Scientific/Engineering :: Information Analysis",
          "Topic :: Scientific/Engineering :: Physics",
          "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "version": "1.3.0"
      },
      "aiida_version": null,
      "entry_points": {
        "aiida.schedulers": {
          "yascheduler": "yascheduler.aiida_plugin:YaScheduler"
        },
        "console_scripts": {
          "yainit": "yascheduler.utils:init",
          "yanodes": "yascheduler.utils:show_nodes",
          "yascheduler": "yascheduler.utils:daemonize",
          "yasetnode": "yascheduler.utils:manage_node",
          "yastatus": "yascheduler.utils:check_status",
          "yasubmit": "yascheduler.utils:submit"
        }
      },
      "commits_count": 26,
      "development_status": "beta",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-yascheduler<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W002'>W002</a>: AiiDA version not found"
      ],
      "summaryinfo": [
        {
          "colorclass": "purple",
          "text": "Console scripts",
          "count": 6
        },
        {
          "colorclass": "orange",
          "text": "Other (Schedulers)",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install yascheduler",
      "is_installable": "False"
    },
    "aiida-z2pack": {
      "code_home": "https://github.com/AntimoMarrazzo/aiida-z2pack",
      "entry_point_prefix": "z2pack",
      "pip_url": "git+https://github.com/AntimoMarrazzo/aiida-z2pack",
      "name": "aiida-z2pack",
      "package_name": "aiida_z2pack",
      "hosted_on": "github.com",
      "metadata": {
        "description": "The official AiiDA plugin for z2pack",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11"
        ],
        "author": "Antimo Marrazzo",
        "author_email": "antimo.marrazzo@epfl.ch"
      },
      "aiida_version": ">=2.1.2,<=2.2.2",
      "entry_points": {
        "aiida.calculations": {
          "z2pack.z2pack": "aiida_z2pack.calculations.z2pack:Z2packCalculation"
        },
        "aiida.parsers": {
          "z2pack.z2pack": "aiida_z2pack.parsers.z2pack:Z2packParser"
        },
        "aiida.workflows": {
          "z2pack.base": "aiida_z2pack.workchains.base:Z2packBaseWorkChain",
          "z2pack.qsh": "aiida_z2pack.workchains.parity:Z2QSHworkchain",
          "z2pack.3DChern": "aiida_z2pack.workchains.chern:Z2pack3DChernWorkChain",
          "z2pack.refine": "aiida_z2pack.workchains.refine:RefineCrossingsPosition"
        }
      },
      "commits_count": 0,
      "development_status": "stable",
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-z2pack<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "green",
          "text": "Workflows",
          "count": 4
        }
      ],
      "pip_install_cmd": "pip install git+https://github.com/AntimoMarrazzo/aiida-z2pack",
      "is_installable": "False"
    },
    "aiida-zeopp": {
      "code_home": "https://github.com/lsmo-epfl/aiida-zeopp",
      "development_status": "stable",
      "entry_point_prefix": "zeopp",
      "pip_url": "aiida-zeopp",
      "plugin_info": "https://raw.github.com/lsmo-epfl/aiida-zeopp/master/setup.json",
      "name": "aiida-zeopp",
      "package_name": "aiida_zeopp",
      "hosted_on": "github.com",
      "metadata": {
        "release_date": "2023-08-26",
        "description": "AiiDA plugin for zeo++",
        "author_email": "Leopold Talirz <leopold.talirz@epfl.ch>, Miriam Pougin <miriam.pougin@epfl.ch>",
        "classifiers": [
          "Development Status :: 5 - Production/Stable",
          "Framework :: AiiDA",
          "License :: OSI Approved :: MIT License",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.10",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.8",
          "Programming Language :: Python :: 3.9"
        ],
        "version": "2.0.0"
      },
      "aiida_version": ">=2.3,<3.0",
      "entry_points": {
        "aiida.calculations": {
          "zeopp.network": "aiida_zeopp.calculations.network:NetworkCalculation"
        },
        "aiida.data": {
          "zeopp.parameters": "aiida_zeopp.data.parameters:NetworkParameters"
        },
        "aiida.parsers": {
          "zeopp.network": "aiida_zeopp.parsers.network:NetworkParser"
        }
      },
      "commits_count": 0,
      "errors": [
        "<a href='https://github.com/aiidateam/aiida-registry#E001'>E001</a>: Failed to install plugin aiida-zeopp<pre>ERROR: Could not open requirements file: [Errno 2] No such file or directory: '--force-reinstall'\n</pre>"
      ],
      "warnings": [
        "<a href='https://github.com/aiidateam/aiida-registry#W006'>W006</a>: 'development_status' key is deprecated. Use PyPI Trove classifiers in the plugin repository instead."
      ],
      "summaryinfo": [
        {
          "colorclass": "blue",
          "text": "Calculations",
          "count": 1
        },
        {
          "colorclass": "brown",
          "text": "Parsers",
          "count": 1
        },
        {
          "colorclass": "red",
          "text": "Data",
          "count": 1
        }
      ],
      "pip_install_cmd": "pip install aiida-zeopp",
      "is_installable": "False"
    }
  },
  "globalsummary": [
    {
      "name": "Calculations",
      "colorclass": "blue",
      "num_entries": 70,
      "total_num": 170
    },
    {
      "name": "Parsers",
      "colorclass": "brown",
      "num_entries": 71,
      "total_num": 149
    },
    {
      "name": "Data",
      "colorclass": "red",
      "num_entries": 41,
      "total_num": 132
    },
    {
      "name": "Workflows",
      "colorclass": "green",
      "num_entries": 50,
      "total_num": 221
    },
    {
      "name": "Console scripts",
      "colorclass": "purple",
      "num_entries": 18,
      "total_num": 35
    },
    {
      "name": "Other",
      "tooltip": "Aenet potentials, Aiida python serializers, Aiidalab qe properties, ...",
      "colorclass": "orange",
      "num_entries": 35,
      "total_num": 113
    }
  ],
  "status_dict": {
    "planning": [
      "Not yet ready to use. Developers welcome!",
      "status-planning-d9644d.svg"
    ],
    "pre-alpha": [
      "Not yet ready to use. Developers welcome!",
      "status-planning-d9644d.svg"
    ],
    "alpha": [
      "Adds new functionality, not yet ready for production. Testing welcome!",
      "status-alpha-d6af23.svg"
    ],
    "beta": [
      "Adds new functionality, not yet ready for production. Testing welcome!",
      "status-beta-d6af23.svg"
    ],
    "stable": [
      "Ready for production calculations. Bug reports welcome!",
      "status-stable-4cc61e.svg"
    ],
    "mature": [
      "Ready for production calculations. Bug reports welcome!",
      "status-stable-4cc61e.svg"
    ],
    "inactive": [
      "No longer maintained.",
      "status-inactive-bbbbbb.svg"
    ]
  },
  "entrypointtypes": {
    "aiida.calculations": "CalcJobs and calculation functions",
    "aiida.parsers": "CalcJob parsers",
    "aiida.data": "Data node types",
    "aiida.cmdline.data": "verdi data commands",
    "aiida.groups": "Group types",
    "aiida.workflows": "WorkChains and work functions",
    "aiida.schedulers": "Job scheduler support",
    "aiida.transports": "Data transport protocols",
    "aiida.tests": "Development test modules",
    "aiida.tools.dbexporters": "Support for exporting to external databases",
    "aiida.tools.dbimporters": "Support for importing from external databases",
    "console_scripts": "Console scripts"
  }
}